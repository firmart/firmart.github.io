<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>emacs-lisp on Firmin Martin</title>
    <link>https://firminmartin.com/en/tags/emacs-lisp/</link>
    <description>Recent content in emacs-lisp on Firmin Martin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Â©2021, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 03 Mar 2021 00:00:00 +0100</lastBuildDate>
    <sy:updatePeriod>weekly</sy:updatePeriod>
    
        <atom:link href="https://firminmartin.com/en/tags/emacs-lisp/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Obtain emails header in notmuch</title>
        <link>https://firminmartin.com/en/posts/2021/03/obtain_emails_header_in_notmuch/</link>
        <pubDate>Wed, 03 Mar 2021 00:00:00 +0100</pubDate>
        
        <atom:modified>Wed, 03 Mar 2021 12:43:55 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2021/03/obtain_emails_header_in_notmuch/</guid>
        <description>Introduction It&amp;rsquo;s been half a month that I&amp;rsquo;m gradually writing an Emacs package for notmuch email notification. Although it works fine so far, it misses an important feature which consists to display the subject and the sender name on the notification instead of merely saying &amp;ldquo;2 new messages since last refresh&amp;rdquo;.
Fortunately, probably because the development of the notmuch Emacs frontend, notmuch can speak Lisp S-expression.
Notmuch show To retrieve header from emails, we need the command notmuch show.</description>
        <content:encoded>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s been half a month that I&amp;rsquo;m gradually writing &lt;a href=&#34;https://github.com/firmart/notmuch-notify&#34;&gt;an Emacs package for notmuch
email notification&lt;/a&gt;. Although it works fine so far, it misses an important
feature which consists to display the subject and the sender name on the
notification instead of merely saying &amp;ldquo;2 new messages since last refresh&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Fortunately, probably because the development of the notmuch Emacs frontend,
notmuch can speak Lisp &lt;a href=&#34;https://en.wikipedia.org/wiki/S-expression&#34;&gt;S-expression&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;notmuch-show&#34;&gt;Notmuch show&lt;/h2&gt;
&lt;p&gt;To retrieve header from emails, we need the command &lt;a href=&#34;https://notmuchmail.org/manpages/notmuch-show-1/&#34;&gt;notmuch show&lt;/a&gt;. Moreover,
since we have no interest on email body and other emails that mismatch the
query, we need the options &lt;code&gt;--body=false&lt;/code&gt; and &lt;code&gt;--entire-thread=false&lt;/code&gt;. As stated
above, we also want S-expression as output format, &lt;em&gt;e.g.&lt;/em&gt; &lt;code&gt;--format=sexp&lt;/code&gt;. Putting together:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;notmuch show --body&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt; --entire-thread&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt; --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sexp &amp;lt;search-term&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;where &lt;a href=&#34;https://notmuchmail.org/manpages/notmuch-search-terms-7/&#34;&gt;search-term&lt;/a&gt; corresponds, in notmuch jargon, to the query expression.&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;https://notmuchmail.org/manpages/notmuch-show-1/&#34;&gt;notmuch show&lt;/a&gt; documentation, a thread corresponds to a nested structure.
For testing purpose, I wrote to myself several emails to obtain two threads of the
following structure (with the sent time to better identifying them later):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;|- email 1 (12:32:37)
|  |
|  |-- email 2 (12:32:56)
|  |  |
|  |  |- email 3 (12:33:18)
|  |
|  |-- email 4 (12:33:34)
|
|- email 5 (12:44:34)
   |
   |- email 6 (12:45:41)
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&amp;hellip; and use an appropriate search term to filter out exactly these threads.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;notmuch&lt;/code&gt; package already provides the function &lt;code&gt;notmuch-call-notmuch-sexp&lt;/code&gt;
to convert the shell output to Emacs Lisp S-expression.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; We can thus
translate the previous shell command into&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-call-notmuch-sexp&lt;/span&gt;
     &lt;span class=&#34;s&#34;&gt;&amp;#34;show&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;--body=false&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;--entire-thread=false&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;--format=sexp&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;But! My instinct tells me that we could have better. So, searching which
functions actually call &lt;code&gt;notmuch-call-notmuch-sexp&lt;/code&gt; brings me to the library
&lt;code&gt;notmuch-query&lt;/code&gt; which contains lots of useful functions. In particular, the
function call above can, kind of&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, be simplify to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-get-threads&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;notmuch-thread-structure&#34;&gt;Notmuch thread structure&lt;/h2&gt;
&lt;p&gt;In notmuch, an email corresponds to a property list (plist) with the following
fields &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;match&lt;/code&gt;, &lt;code&gt;excluded&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;timestamp&lt;/code&gt;, &lt;code&gt;date_relative&lt;/code&gt;,
&lt;code&gt;tags&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;crypto&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;. Needless to say, we will pay particular
attention on &lt;code&gt;headers&lt;/code&gt;. &lt;code&gt;tags&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; could be useful for further
development. The command above returns me six plists surrounded by countless
parentheses. To understand better the structure, I replaced the plists by the
sent time:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:44:34&amp;#34;&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:45:41&amp;#34;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;

 &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:32:37&amp;#34;&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:32:56&amp;#34;&lt;/span&gt;
     &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:33:18&amp;#34;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:33:34&amp;#34;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Comparing to the threads I artificially created, it&amp;rsquo;s pretty much the same.&lt;/p&gt;
&lt;h2 id=&#34;flatten-the-s-expression&#34;&gt;Flatten the S-expression&lt;/h2&gt;
&lt;p&gt;The tree structure is not relevant for our purpose, so we want to flatten it as
a list of plist. We actually don&amp;rsquo;t want to parse the S-expression ourselves, as
stated above, the &lt;code&gt;notmuch-query&lt;/code&gt; library provides some functions we can use
directly. It can be done by&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-map-threads&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;#&amp;#39;identity&lt;/span&gt;
			   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-get-threads&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;And as it is actually a &lt;a href=&#34;https://en.wikipedia.org/wiki/Map%5F(higher-order%5Ffunction)&#34;&gt;map&lt;/a&gt; function, to obtain a list of headers we can simply
define the following function.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;defun&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;notmuch-notify--show-headers&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-map-threads&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;plist-get&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;:headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-get-threads&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Having emails header given a search term, we can now easily introduce subject
and email sender along with the notification message.&lt;/p&gt;
&lt;p&gt;See my work-in-progress package &lt;a href=&#34;https://github.com/firmart/notmuch-notify&#34;&gt;notmuch-notify&lt;/a&gt; for more information!&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Equivalently, one can use &lt;code&gt;(read (shell-command-to-string ...))&lt;/code&gt; for the same purpose. But &lt;code&gt;notmuch-call-notmuch-sexp&lt;/code&gt; is more robust as it offers error handling.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;It misses the arguments &lt;code&gt;--body=false&lt;/code&gt; and &lt;code&gt;--entire-thread=false&lt;/code&gt;, but they are actually not so important as they won&amp;rsquo;t save us much performance.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>notmuch</category>
            
          
            
              <category>email</category>
            
          
            
              <category>emacs-lisp</category>
            
          
            
              <category>emacs</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>
