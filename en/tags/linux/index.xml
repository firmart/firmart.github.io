<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>linux on Firmin Martin</title>
    <link>https://firminmartin.com/en/tags/linux/</link>
    <description>Recent content in linux on Firmin Martin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 26 Mar 2021 00:00:00 +0100</lastBuildDate>
    <sy:updatePeriod>weekly</sy:updatePeriod>
    
        <atom:link href="https://firminmartin.com/en/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Tabs in Alacritty</title>
        <link>https://firminmartin.com/en/posts/2021/03/tabs_in_alacritty/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0100</pubDate>
        
        <atom:modified>Fri, 26 Mar 2021 00:00:00 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2021/03/tabs_in_alacritty/</guid>
        <description>Introduction Some time ago, I switched my daily terminal from kitty to alacritty due to issue regarding CJK input methods1. However, alacritty is known to not support tabs by design. There are at least two ways to enable tabs: through tabbed or tmux. Both are available in Ubuntu 20.04 package manager.
tabbed tabbed is kind of a wrapper that will equip alacritty with tabs. To open alacritty with tabbed, use the following command:</description>
        
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>terminal</category>
            
          
            
              <category>tmux</category>
            
          
            
              <category>tabbed</category>
            
          
            
              <category>alacritty</category>
            
          
            
              <category>kitty</category>
            
          
            
              <category>linux</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Breadth-first search grep</title>
        <link>https://firminmartin.com/en/posts/2021/03/bfs-grep/</link>
        <pubDate>Tue, 02 Mar 2021 00:00:00 +0100</pubDate>
        
        <atom:modified>Tue, 02 Mar 2021 09:47:43 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2021/03/bfs-grep/</guid>
        <description>Introduction From time to time, I want to search over my dotfiles, precisely those immediately under my home directory ~/. The problem of grep -R &amp;lt;regex&amp;gt; is that it quickly delves into an oceanic trench, full of caches, xml files or databases. In other words, it uses a depth-first approach.
bfs-grep The following shell function helps me greatly to deal with such a situation. It employs a breadth-first search, i.e. level by level.</description>
        
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>cli</category>
            
          
            
              <category>shell</category>
            
          
            
              <category>linux</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Rating images painlessly with exiftool feat. ranger &amp; sxiv</title>
        <link>https://firminmartin.com/en/posts/2020/12/rating_images_painlessly_with_exiftool/</link>
        <pubDate>Thu, 03 Dec 2020 00:00:00 +0100</pubDate>
        
        <atom:modified>Mon, 01 Mar 2021 09:47:12 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2020/12/rating_images_painlessly_with_exiftool/</guid>
        <description>Background I was looking for a way to classifying images by rating them on the fly. My first attempt was using darktable as suggested in a thread. Indeed, the auto-advance rating mechanism was quite handy. But it is still too heavy for this sole purpose. In darktable, user have to import images before editing metadata. When tens of thousands images are involved, the process of importing images can be quite time-consuming1 as it creates for each image an XMP file to store metadata.</description>
        
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>linux</category>
            
          
            
              <category>ranger</category>
            
          
            
              <category>exiftool</category>
            
          
            
              <category>zsh</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>