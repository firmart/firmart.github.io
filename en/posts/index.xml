<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Posts on Firmin Martin</title>
    <link>https://firminmartin.com/en/posts/</link>
    <description>Recent content in Posts on Firmin Martin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>©2021, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 06 Sep 2020 00:00:00 +0200</lastBuildDate>
    <sy:updatePeriod>weekly</sy:updatePeriod>
    
        <atom:link href="https://firminmartin.com/en/posts/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Git: autocomplete –trailer and –cc in zsh</title>
        <link>https://firminmartin.com/en/posts/2021/05/git_autocomplete_trailer_and_recipients_in_zsh/</link>
        <pubDate>Thu, 20 May 2021 00:00:00 +0200</pubDate>
        
        <atom:modified>Sat, 22 May 2021 16:03:38 +0200</atom:modified>
        <guid>https://firminmartin.com/en/posts/2021/05/git_autocomplete_trailer_and_recipients_in_zsh/</guid>
        <description>Introduction When working on a Git repository developped through email-based workflow (e.g. Git, Linux kernel, Emacs, notmuch etc.), it is often needed
 to git commit with the --trailer option to acknowledge people, and to git send-email with the --to &amp;amp; -cc options to indicate the recipients of the patch series to send.  Newcomers of such workflow, as me, would copy one by one the email addresses from git-log or the project mailing list at the beginning.</description>
        <content:encoded>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;When working on a Git repository developped through email-based workflow (&lt;em&gt;e.g.&lt;/em&gt;
Git, Linux kernel, Emacs, notmuch &lt;em&gt;etc.&lt;/em&gt;), it is often needed&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to &lt;code&gt;git commit&lt;/code&gt; with the &lt;code&gt;--trailer&lt;/code&gt; option to acknowledge people,&lt;/li&gt;
&lt;li&gt;and to &lt;code&gt;git send-email&lt;/code&gt; with the &lt;code&gt;--to&lt;/code&gt; &amp;amp; &lt;code&gt;-cc&lt;/code&gt; options to indicate the
recipients of the patch series to send.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Newcomers of such workflow, as me, would copy one by one the email addresses
from &lt;code&gt;git-log&lt;/code&gt; or the project mailing list at the beginning. But it becomes
quickly tiresome. The good news is that this process can be automatized with
&lt;code&gt;fzf&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt; (see the &lt;a href=&#34;#screencasts&#34;&gt;Screencasts&lt;/a&gt; section).&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s make a fake Git repository to illustrate how it works.  The following
snippet will create at most 1500 empty commits from 150 distinct developers.
It uses &lt;code&gt;rig&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; to create fake identities.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~/tmp/Git_fzf/ mkdir -p &lt;span class=&#34;nv&#34;&gt;$DIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DIR&lt;/span&gt;
git init
rig -c &lt;span class=&#34;m&#34;&gt;150&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk -v &lt;span class=&#34;nv&#34;&gt;RS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\n\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $1 &amp;#34; &amp;#34; $2}&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; name&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;1..&lt;span class=&#34;k&#34;&gt;$((&lt;/span&gt; RANDOM &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
            git commit --author &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &amp;lt;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;// /.&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@domain.com&amp;gt;&amp;#34;&lt;/span&gt; --allow-empty --allow-empty-message -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a id=&#34;org6c6ada4&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://firminmartin.com/ox-hugo/fake_repository.gif&#34;
         alt=&#34;Figure 1: Creating a fake Git repository with distinct authors.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Figure 1: Creating a fake Git repository with distinct authors.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;fetching-email-addresses-of-developers&#34;&gt;Fetching email addresses of developers&lt;/h2&gt;
&lt;p&gt;The following command returns all email addresses of the current Git
repository&amp;rsquo;s developers.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;git shortlog -sne --all &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -f2
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Breaking it down, we instruct &lt;code&gt;git shortlog&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to suppress commit descriptions (&lt;code&gt;-s&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;to sort the contributors by the number of commits (&lt;code&gt;-n&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;to provide contributors&#39; email (&lt;code&gt;-e&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;and to consider the developers of all branches (&lt;code&gt;--all&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Piping the result to &lt;code&gt;cut -f2&lt;/code&gt; helps us to get rid of the commits count.&lt;/p&gt;
&lt;h2 id=&#34;select-email-addresses&#34;&gt;Select email addresses&lt;/h2&gt;
&lt;p&gt;Now, we want to pick out some addresses we are interested in. This step requires
that the fuzzy filter &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt; is installed.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s pretty simple: we just have to pipe the result of &lt;code&gt;git-shortlog&lt;/code&gt; to &lt;code&gt;fzf&lt;/code&gt; and
use the option &lt;code&gt;-m&lt;/code&gt; to enable multiple choices. The &lt;code&gt;--reverse&lt;/code&gt; option makes a
drop-down menu which I find less disruptive.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;git shortlog -sne --all &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -f2 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; fzf -m --reverse
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Now you can select/unselect emails with &lt;code&gt;TAB&lt;/code&gt; / &lt;code&gt;Shift+TAB&lt;/code&gt;. Once you
are done, press &lt;code&gt;RET&lt;/code&gt;. It will output the selected entries.&lt;/p&gt;
&lt;h2 id=&#34;select-git-commit-trailers-and-git-send-email-recipients-options&#34;&gt;Select &lt;code&gt;git-commit&lt;/code&gt; trailers and &lt;code&gt;git-send-email&lt;/code&gt; recipients options&lt;/h2&gt;
&lt;p&gt;We can also make a drop-down menu to select &lt;code&gt;git-commit&lt;/code&gt; trailers and
recipients options. Let&amp;rsquo;s wrap it in a function.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;__fzf_git_trailer_and_option&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
cat &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;- EOF | fzf --reverse
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--to=
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--bcc=
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--cc=
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--trailer Thanks-to:
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--trailer Reviewed-by:
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--trailer Reported-by:
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--trailer Acked-by:
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--trailer Tested-by:
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--trailer Based-on-patch-by:
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	--trailer Mentored-by:
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;	EOF&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;detect-if-we-are-under-a-git-repository&#34;&gt;Detect if we are under a Git repository&lt;/h2&gt;
&lt;p&gt;The command &lt;code&gt;git rev-parse --is-inside-work-tree&lt;/code&gt; can tell whether we are under
a Git repository. Let&amp;rsquo;s enable autocompletion only in such situation. We wrap
this into a function which, given a selected trailer or option and potentially
multiple addresses, returns addresses prefixed by the selected trailer or
option.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;__fzf_git_authors&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;git rev-parse --is-inside-work-tree 2&amp;gt;/dev/null&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;trailer_or_option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;__fzf_git_trailer_and_option&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
    git shortlog -sne --all &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -f2 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; fzf -m --reverse &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; item&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
                &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;trailer_or_option&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39; &amp;#34;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;bind-autocompletion-to-a-shortcut&#34;&gt;Bind autocompletion to a shortcut&lt;/h2&gt;
&lt;p&gt;So far, the result is outputted to the terminal, but we actually want that it
appends the current command line. So, we keep the content on the left of the
buffer and redisplay it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;fzf-git-authors&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;LBUFFER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;LBUFFER&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;__fzf_git_authors&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
  zle redisplay
  &lt;span class=&#34;nb&#34;&gt;typeset&lt;/span&gt; -f zle-line-init &amp;gt;/dev/null &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; zle zle-line-init
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Finally, I bound that function to &lt;code&gt;Alt-E&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;zle     -N   fzf-git-authors
bindkey &lt;span class=&#34;s1&#34;&gt;&amp;#39;\ee&amp;#39;&lt;/span&gt; fzf-git-authors
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;screencasts&#34;&gt;Screencasts&lt;/h2&gt;
&lt;figure&gt;&lt;img src=&#34;https://firminmartin.com/ox-hugo/git_commit.gif&#34;
         alt=&#34;Figure 2: git-commit with --trailer autocompletion.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Figure 2: &lt;code&gt;git-commit&lt;/code&gt; with &lt;code&gt;--trailer&lt;/code&gt; autocompletion.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://firminmartin.com/ox-hugo/git_send_email.gif&#34;
         alt=&#34;Figure 3: git-send-email with recipients autocompletion.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Figure 3: &lt;code&gt;git-send-email&lt;/code&gt; with recipients autocompletion.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;On Ubuntu, &lt;code&gt;sudo apt install rig&lt;/code&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>zsh</category>
            
          
            
              <category>git</category>
            
          
            
              <category>fzf</category>
            
          
            
              <category>autocomplete</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Tabs in Alacritty</title>
        <link>https://firminmartin.com/en/posts/2021/03/tabs_in_alacritty/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0100</pubDate>
        
        <atom:modified>Sat, 22 May 2021 16:03:38 +0200</atom:modified>
        <guid>https://firminmartin.com/en/posts/2021/03/tabs_in_alacritty/</guid>
        <description>Introduction Some time ago, I switched my daily terminal from kitty to alacritty due to issue regarding CJK input methods1. However, alacritty is known to not support tabs by design. There are at least two ways to enable tabs: through tabbed or tmux. Both are available in Ubuntu 20.04 package manager.
tabbed tabbed is kind of a wrapper that will equip alacritty with tabs. To open alacritty with tabbed, use the following command:</description>
        <content:encoded>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Some time ago, I switched my daily terminal from &lt;a href=&#34;https://github.com/kovidgoyal/kitty&#34;&gt;kitty&lt;/a&gt; to &lt;a href=&#34;https://github.com/alacritty/alacritty&#34;&gt;alacritty&lt;/a&gt; due to
issue regarding CJK input methods&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. However, alacritty is known to &lt;a href=&#34;https://github.com/alacritty/alacritty/issues/3129&#34;&gt;not
support tabs by design&lt;/a&gt;. There are at least two ways to enable tabs: through
&lt;a href=&#34;https://git.suckless.org/tabbed/file/README.html&#34;&gt;tabbed&lt;/a&gt; or &lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;tmux&lt;/a&gt;. Both are available in Ubuntu 20.04 package manager.&lt;/p&gt;
&lt;h2 id=&#34;tabbed&#34;&gt;tabbed&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tabbed&lt;/code&gt; is kind of a wrapper that will equip alacritty with tabs. To open
alacritty with &lt;code&gt;tabbed&lt;/code&gt;, use the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;tabbed alacritty --embed
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Some notable keybindings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl+Shift+Ret&lt;/code&gt; to open a new tab.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+Tab&lt;/code&gt; or &lt;code&gt;Ctrl+Shift+h&lt;/code&gt; / &lt;code&gt;Ctrl+Shift+l&lt;/code&gt; to cycle tabs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+q&lt;/code&gt; to kill a tab.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tmux&#34;&gt;tmux&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tmux&lt;/code&gt; is probably one of the most-used &lt;a href=&#34;https://en.wikipedia.org/wiki/Terminal%5Fmultiplexer&#34;&gt;terminal multiplexer&lt;/a&gt;.  In &lt;code&gt;tmux&lt;/code&gt; jargon,
tabs are called &lt;em&gt;windows&lt;/em&gt;. You may want to directly work under &lt;code&gt;tmux&lt;/code&gt;. To do so,
open alacritty with &lt;code&gt;tmux&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;alacritty -e tmux
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;tmux&lt;/code&gt; offers a bunch of features and customizability, but essentially, to just
try out &lt;code&gt;tmux&lt;/code&gt; windows feature, note the following shortcuts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a window with &lt;code&gt;C-b c&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Cycle forward/backward among windows with &lt;code&gt;C-b n&lt;/code&gt; / &lt;code&gt;C-b p&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Kill a window with &lt;code&gt;C-b &amp;amp;&lt;/code&gt; or &lt;code&gt;C-d&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bonus-keep-only-one-terminal-instance&#34;&gt;Bonus: keep only one terminal instance&lt;/h2&gt;
&lt;p&gt;In my opinion, it&amp;rsquo;s not a good idea to keep multiple terminal windows: switching
among them is quickly irritating. Personally, I bind &lt;code&gt;Super+T&lt;/code&gt; to terminal and
keep a single instance by using &lt;code&gt;wmctrl&lt;/code&gt;. Concretely, combining up with the
above commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For &lt;code&gt;tabbed&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wmctrl -x -a &lt;span class=&#34;s2&#34;&gt;&amp;#34;tabbed&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; tabbed alacritty --embed
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For &lt;code&gt;tmux&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wmctrl -x -a &lt;span class=&#34;s2&#34;&gt;&amp;#34;alacritty&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; alacritty -e tmux
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The commands check if there is a terminal instance, if so focus on it, otherwise
create a new instance. You will have to wrap these commands in &lt;code&gt;bash -c &#39;&amp;lt;command&amp;gt;&#39;&lt;/code&gt; if you want to bind them in Ubuntu settings (Keyboard shortcuts &amp;gt;
Custom shortcuts). I use this tactic to bind the global keybindings I use 99% of
the time: namely &lt;code&gt;Super+C&lt;/code&gt; for browser, &lt;code&gt;Super+E&lt;/code&gt; for Emacs and &lt;code&gt;Super+T&lt;/code&gt; for terminal.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tabbed&lt;/code&gt; is light enough for people needing only tabs and no more. But I noticed
some encumbrances making me switched to &lt;code&gt;tmux&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keybindings are hardcoded in &lt;a href=&#34;https://git.suckless.org/tabbed/file/config.def.h.html&#34;&gt;config.def.h&lt;/a&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, although you can easily change it
and compile a local version, it might not be worth it.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ranger/ranger&#34;&gt;Ranger&lt;/a&gt; image preview doesn&amp;rsquo;t work anymore.&lt;/li&gt;
&lt;li&gt;The developpement is kind of inactive&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;They actually work, but the feature is &lt;a href=&#34;https://github.com/kovidgoyal/kitty/issues/469#issuecomment-419406438&#34;&gt;turned off by default&lt;/a&gt;. One has to enable it by setting the environment variable &lt;code&gt;GLFW_IM_MODULE=ibus&lt;/code&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;In my case, I bound in Vim &lt;code&gt;C-q&lt;/code&gt; as &lt;code&gt;:q!&lt;/code&gt; for years and was not ready to change it just for &lt;code&gt;tabbed&lt;/code&gt;.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;You might want to check out &lt;a href=&#34;https://github.com/podocarp/tabbed&#34;&gt;this fork&lt;/a&gt; for better support.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>terminal</category>
            
          
            
              <category>tmux</category>
            
          
            
              <category>tabbed</category>
            
          
            
              <category>alacritty</category>
            
          
            
              <category>kitty</category>
            
          
            
              <category>linux</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Obtain emails header in notmuch</title>
        <link>https://firminmartin.com/en/posts/2021/03/obtain_emails_header_in_notmuch/</link>
        <pubDate>Wed, 03 Mar 2021 00:00:00 +0100</pubDate>
        
        <atom:modified>Wed, 03 Mar 2021 12:43:55 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2021/03/obtain_emails_header_in_notmuch/</guid>
        <description>Introduction It&amp;rsquo;s been half a month that I&amp;rsquo;m gradually writing an Emacs package for notmuch email notification. Although it works fine so far, it misses an important feature which consists to display the subject and the sender name on the notification instead of merely saying &amp;ldquo;2 new messages since last refresh&amp;rdquo;.
Fortunately, probably because the development of the notmuch Emacs frontend, notmuch can speak Lisp S-expression.
Notmuch show To retrieve header from emails, we need the command notmuch show.</description>
        <content:encoded>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s been half a month that I&amp;rsquo;m gradually writing &lt;a href=&#34;https://github.com/firmart/notmuch-notify&#34;&gt;an Emacs package for notmuch
email notification&lt;/a&gt;. Although it works fine so far, it misses an important
feature which consists to display the subject and the sender name on the
notification instead of merely saying &amp;ldquo;2 new messages since last refresh&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Fortunately, probably because the development of the notmuch Emacs frontend,
notmuch can speak Lisp &lt;a href=&#34;https://en.wikipedia.org/wiki/S-expression&#34;&gt;S-expression&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;notmuch-show&#34;&gt;Notmuch show&lt;/h2&gt;
&lt;p&gt;To retrieve header from emails, we need the command &lt;a href=&#34;https://notmuchmail.org/manpages/notmuch-show-1/&#34;&gt;notmuch show&lt;/a&gt;. Moreover,
since we have no interest on email body and other emails that mismatch the
query, we need the options &lt;code&gt;--body=false&lt;/code&gt; and &lt;code&gt;--entire-thread=false&lt;/code&gt;. As stated
above, we also want S-expression as output format, &lt;em&gt;e.g.&lt;/em&gt; &lt;code&gt;--format=sexp&lt;/code&gt;. Putting together:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;notmuch show --body&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt; --entire-thread&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt; --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sexp &amp;lt;search-term&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;where &lt;a href=&#34;https://notmuchmail.org/manpages/notmuch-search-terms-7/&#34;&gt;search-term&lt;/a&gt; corresponds, in notmuch jargon, to the query expression.&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;https://notmuchmail.org/manpages/notmuch-show-1/&#34;&gt;notmuch show&lt;/a&gt; documentation, a thread corresponds to a nested structure.
For testing purpose, I wrote to myself several emails to obtain two threads of the
following structure (with the sent time to better identifying them later):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;|- email 1 (12:32:37)
|  |
|  |-- email 2 (12:32:56)
|  |  |
|  |  |- email 3 (12:33:18)
|  |
|  |-- email 4 (12:33:34)
|
|- email 5 (12:44:34)
   |
   |- email 6 (12:45:41)
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&amp;hellip; and use an appropriate search term to filter out exactly these threads.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;notmuch&lt;/code&gt; package already provides the function &lt;code&gt;notmuch-call-notmuch-sexp&lt;/code&gt;
to convert the shell output to Emacs Lisp S-expression.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; We can thus
translate the previous shell command into&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-call-notmuch-sexp&lt;/span&gt;
     &lt;span class=&#34;s&#34;&gt;&amp;#34;show&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;--body=false&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;--entire-thread=false&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;--format=sexp&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;But! My instinct tells me that we could have better. So, searching which
functions actually call &lt;code&gt;notmuch-call-notmuch-sexp&lt;/code&gt; brings me to the library
&lt;code&gt;notmuch-query&lt;/code&gt; which contains lots of useful functions. In particular, the
function call above can, kind of&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, be simplify to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-get-threads&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;notmuch-thread-structure&#34;&gt;Notmuch thread structure&lt;/h2&gt;
&lt;p&gt;In notmuch, an email corresponds to a property list (plist) with the following
fields &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;match&lt;/code&gt;, &lt;code&gt;excluded&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;timestamp&lt;/code&gt;, &lt;code&gt;date_relative&lt;/code&gt;,
&lt;code&gt;tags&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;crypto&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;. Needless to say, we will pay particular
attention on &lt;code&gt;headers&lt;/code&gt;. &lt;code&gt;tags&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; could be useful for further
development. The command above returns me six plists surrounded by countless
parentheses. To understand better the structure, I replaced the plists by the
sent time:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:44:34&amp;#34;&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:45:41&amp;#34;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;

 &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:32:37&amp;#34;&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:32:56&amp;#34;&lt;/span&gt;
     &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:33:18&amp;#34;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12:33:34&amp;#34;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Comparing to the threads I artificially created, it&amp;rsquo;s pretty much the same.&lt;/p&gt;
&lt;h2 id=&#34;flatten-the-s-expression&#34;&gt;Flatten the S-expression&lt;/h2&gt;
&lt;p&gt;The tree structure is not relevant for our purpose, so we want to flatten it as
a list of plist. We actually don&amp;rsquo;t want to parse the S-expression ourselves, as
stated above, the &lt;code&gt;notmuch-query&lt;/code&gt; library provides some functions we can use
directly. It can be done by&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-map-threads&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;#&amp;#39;identity&lt;/span&gt;
			   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-get-threads&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;And as it is actually a &lt;a href=&#34;https://en.wikipedia.org/wiki/Map%5F(higher-order%5Ffunction)&#34;&gt;map&lt;/a&gt; function, to obtain a list of headers we can simply
define the following function.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;defun&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;notmuch-notify--show-headers&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-map-threads&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;plist-get&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;:headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-query-get-threads&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;search-term&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Having emails header given a search term, we can now easily introduce subject
and email sender along with the notification message.&lt;/p&gt;
&lt;p&gt;See my work-in-progress package &lt;a href=&#34;https://github.com/firmart/notmuch-notify&#34;&gt;notmuch-notify&lt;/a&gt; for more information!&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Equivalently, one can use &lt;code&gt;(read (shell-command-to-string ...))&lt;/code&gt; for the same purpose. But &lt;code&gt;notmuch-call-notmuch-sexp&lt;/code&gt; is more robust as it offers error handling.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;It misses the arguments &lt;code&gt;--body=false&lt;/code&gt; and &lt;code&gt;--entire-thread=false&lt;/code&gt;, but they are actually not so important as they won&amp;rsquo;t save us much performance.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>notmuch</category>
            
          
            
              <category>email</category>
            
          
            
              <category>emacs-lisp</category>
            
          
            
              <category>emacs</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Breadth-first search grep</title>
        <link>https://firminmartin.com/en/posts/2021/03/bfs-grep/</link>
        <pubDate>Tue, 02 Mar 2021 00:00:00 +0100</pubDate>
        
        <atom:modified>Tue, 02 Mar 2021 09:47:43 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2021/03/bfs-grep/</guid>
        <description>Introduction From time to time, I want to search over my dotfiles, precisely those immediately under my home directory ~/. The problem of grep -R &amp;lt;regex&amp;gt; is that it quickly delves into an oceanic trench, full of caches, xml files or databases. In other words, it uses a depth-first approach.
bfs-grep The following shell function helps me greatly to deal with such a situation. It employs a breadth-first search, i.e. level by level.</description>
        <content:encoded>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;From time to time, I want to search over my dotfiles, precisely those immediately
under my home directory &lt;code&gt;~/&lt;/code&gt;. The problem of &lt;code&gt;grep -R &amp;lt;regex&amp;gt;&lt;/code&gt; is that it
quickly delves into an oceanic trench, full of caches, xml files or
databases. In other words, it uses a depth-first approach.&lt;/p&gt;
&lt;h2 id=&#34;bfs-grep&#34;&gt;bfs-grep&lt;/h2&gt;
&lt;p&gt;The following shell function helps me greatly to deal with such a situation.
It employs a breadth-first search, &lt;em&gt;i.e.&lt;/em&gt; level by level. It is written for
&lt;code&gt;zsh&lt;/code&gt; but should work for &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;ksh93&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The &lt;code&gt;tput&lt;/code&gt; commands are just
used to redden the level announcement. Further tweaks can be made such as
changing the dot &lt;code&gt;.&lt;/code&gt; (current directory) to a target directory or starting from
a specific level. But that&amp;rsquo;s enough for me.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; bfs-grep &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;seq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
        &amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;tput setaf 1&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;BFS-GREP: LEVEL &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;tput sgr0&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
        find . -mindepth &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; -maxdepth &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; -type f -exec grep &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;@:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; +&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;bfs-grep&lt;/code&gt; first argument is the maximum depth to search, starting from &lt;code&gt;1&lt;/code&gt; for the
current level. The remaining arguments are fed to &lt;code&gt;grep&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;See &lt;a href=&#34;https://unix.stackexchange.com/a/225951/216846&#34;&gt;here&lt;/a&gt; for &lt;code&gt;${@:2}&lt;/code&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>cli</category>
            
          
            
              <category>shell</category>
            
          
            
              <category>linux</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>A tale of installing RT18812AU driver and make it works in VirtualBox</title>
        <link>https://firminmartin.com/en/posts/2021/03/a_tale_of_installing_rt18812au_driver_and_make_it_works_in_virtualbox/</link>
        <pubDate>Mon, 01 Mar 2021 00:00:00 +0100</pubDate>
        
        <atom:modified>Mon, 01 Mar 2021 15:48:37 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2021/03/a_tale_of_installing_rt18812au_driver_and_make_it_works_in_virtualbox/</guid>
        <description>Few days ago, I bought a USB Wi-Fi adapter to learn about pentesting. The goal was using this adapter to connect a virtual Kali Linux distribution in VirtualBox to Wi-Fi network through USB.
After some hesitations, I picked up a cheap enough model which uses a RT18812AU chip. An important factor to choose this chip is that it is dual-band. This was the first time I&amp;rsquo;m dealing with such material. Of course, there was no such thing as plug-and-play.</description>
        <content:encoded>&lt;p&gt;Few days ago, I bought a USB Wi-Fi adapter to learn about pentesting. The goal
was using this adapter to connect a virtual Kali Linux distribution in
VirtualBox to Wi-Fi network through USB.&lt;/p&gt;
&lt;p&gt;After some hesitations, I picked up a cheap enough model which uses a
&lt;code&gt;RT18812AU&lt;/code&gt; chip. An important factor to choose this chip is that it is
dual-band. This was the first time I&amp;rsquo;m dealing with such material. Of course,
there was no such thing as plug-and-play. So I had to manually install the
driver.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;org1efa988&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://firminmartin.com/ox-hugo/wifi_adapter.jpg&#34;
         alt=&#34;Figure 1: The Wi-Fi adapter I bought.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Figure 1: The Wi-Fi adapter I bought.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The adapter comes with a &amp;ldquo;quick installation guide&amp;rdquo; written in gibberish
English.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; So, not very promising. I decided to insert directly the provided
CD and see if I can do something. There were three directories for respectively
OSX, Windows and Linux. I extracted the Linux directory and ran the &lt;code&gt;install.sh&lt;/code&gt;
without too much hesitation. It failed. No worry, such thing happens, I read the
&lt;code&gt;install.sh&lt;/code&gt;, again gibberish English comments&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&amp;hellip; I went to the driver
directory (&lt;code&gt;rtl88x2BU_WiFi_linux_v5.3.1_27678.20180430_COEX20180427-5959&lt;/code&gt;) to
see if I can do something and got the marvelous idea to feed the driver name to
Google to see if I can get an up-to-date version. I found one,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/morrownr/88x2bu.git
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;and followed the instructions. It compiles! The bad news is the plugged adapter
doesn&amp;rsquo;t have any sign of life. Weird! After all kinds of attempts and reboots, I
naively ran a new command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;lsusb
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;which reveals that the chip was actually a &lt;code&gt;RT18812AU&lt;/code&gt;.  I double-checked the
chip model and realized that it&amp;rsquo;s right, and thought I bought a BU but finally
picked a AU. So&amp;hellip; why they ever put an outdate &lt;code&gt;RT18812BU&lt;/code&gt; in the CD?
Mystery. Again, I searched a driver for this chip, and found this one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/gnab/rtl8812au
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&amp;hellip; followed the instructions, and bingo! The adapter LED started blinking.  I
expected that it would work painless in VirtualBox&amp;hellip; was wrong. In the Kali
Linux USB settings, the button &amp;ldquo;add new USB filter&amp;rdquo; didn&amp;rsquo;t display my USB
devices, contrary to what I expected. After heavy surfing on the Internet, I
found &lt;a href=&#34;https://forum.stationx.net/t/resolved-usb-wireless-adapter-on-virtual-machine-isnt-recognized/1201/13&#34;&gt;this relevant thread&lt;/a&gt;. Ah, I wasn&amp;rsquo;t in &lt;code&gt;vboxusers&lt;/code&gt; group:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;groups
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;So, I had to add it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo usermod -a -G vboxusers firmart
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Logged out. Log back. And finally:&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;org1d5ea22&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://firminmartin.com/ox-hugo/VBox.png&#34;
         alt=&#34;Figure 2: The Wi-fi adapter detected on VirtualBox.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Figure 2: The Wi-fi adapter detected on VirtualBox.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Ventre Saint-Antoine!&lt;/em&gt;, would say a medieval Frenchman.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you are on Linux, do not even bother to insert the CD (and to read the &amp;ldquo;quick
installation guide&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;Search right away on Google &lt;code&gt;&amp;lt;chip&amp;gt; github&lt;/code&gt; and you would find an enhanced
driver with a useful README.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lsusb&lt;/code&gt; is actually useful to make sure the USB device is there and to
double-check the chip model.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tale&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; would not be written without the help of &lt;code&gt;~/.zsh_history&lt;/code&gt; and my
browser history.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;It starts with a typo: &amp;ldquo;Chater 1: driver installation&amp;rdquo;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&amp;ldquo;Novembor&amp;rdquo;; &amp;ldquo;Drvfoulder&amp;rdquo; for driver folder.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Dated of 2021-02-22.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>hardware</category>
            
          
            
              <category>driver</category>
            
          
            
              <category>virtualbox</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Rating images painlessly with exiftool feat. ranger &amp; sxiv</title>
        <link>https://firminmartin.com/en/posts/2020/12/rating_images_painlessly_with_exiftool/</link>
        <pubDate>Thu, 03 Dec 2020 00:00:00 +0100</pubDate>
        
        <atom:modified>Mon, 01 Mar 2021 09:47:12 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2020/12/rating_images_painlessly_with_exiftool/</guid>
        <description>Background I was looking for a way to classifying images by rating them on the fly. My first attempt was using darktable as suggested in a thread. Indeed, the auto-advance rating mechanism was quite handy. But it is still too heavy for this sole purpose. In darktable, user have to import images before editing metadata. When tens of thousands images are involved, the process of importing images can be quite time-consuming1 as it creates for each image an XMP file to store metadata.</description>
        <content:encoded>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;I was looking for a way to classifying images by rating them on the fly.
My first attempt was using &lt;code&gt;darktable&lt;/code&gt; as suggested in &lt;a href=&#34;https://discuss.pixls.us/t/quick-rating-and-auto-advance-in-linux-a-la-photo-mechanic/3446&#34;&gt;a thread&lt;/a&gt;. Indeed, the
auto-advance rating mechanism was quite handy. But it is still
too heavy for this sole purpose. In &lt;code&gt;darktable&lt;/code&gt;, user have to import images before
editing metadata. When tens of thousands images are involved, the process of
importing images can be quite time-consuming&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; as it creates for each image
an XMP file to store metadata. And this also applies to rating, even though I
configure it to improve performance (without OpenCL) the latency is counted by seconds.
Moreover, XMP are also created for symlink of image. This was not plausible
in my use-case&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; as it enforces me to keep multiple metadata files for the same image.&lt;/p&gt;
&lt;p&gt;Lots of critics, but clearly &lt;code&gt;darktable&lt;/code&gt; was not the right tool. It suits
better on raw photo post-production as intended. I will present in this post two
solutions to remediate the issues aforementioned.&lt;/p&gt;
&lt;h2 id=&#34;goals&#34;&gt;Goals&lt;/h2&gt;
&lt;p&gt;After experiencing &lt;code&gt;darktable&lt;/code&gt;, I know better what I am seeking:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Edit metadata in the image file itself&lt;/strong&gt;. This has two advantages:
&lt;ol&gt;
&lt;li&gt;Keep metadata even if the filename is changed.&lt;/li&gt;
&lt;li&gt;Get rid of XMP files.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Preview and select image without latency&lt;/strong&gt;. Namely, preview images and rate them on the fly.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Metadata editing should follow symlink&lt;/strong&gt;. To centralize metadata in the same place.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Batch rating&lt;/strong&gt;. Rating a whole directory or multiple selected images at once.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;exiftool&#34;&gt;Exiftool&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://exiftool.org/&#34;&gt;ExifTool&lt;/a&gt; is a free and open-source software program for reading, writing, and
manipulating image, audio, video, and PDF metadata.&lt;/p&gt;
&lt;h3 id=&#34;rating-images-with-exiftool&#34;&gt;Rating images with exiftool&lt;/h3&gt;
&lt;p&gt;Rating image with exiftool is very simple.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;exiftool -rating&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; -overwrite_original_in_place &amp;lt;files&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The option &lt;code&gt;-overwrite_original_in_place&lt;/code&gt; overwrite directly the file(s) instead
of moving the original one to &lt;code&gt;filename.ext_original&lt;/code&gt;. Use it wisely at your own risk.&lt;/p&gt;
&lt;p&gt;To read back the rating:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;exiftool -rating &amp;lt;files&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&amp;hellip; or format yourself the output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;exiftool -p &lt;span class=&#34;s1&#34;&gt;&amp;#39;$Rating $Filepath&amp;#39;&lt;/span&gt; -f &amp;lt;files&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;And, of course the symbolic links are followed&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;!&lt;/p&gt;
&lt;p&gt;But with exiftool alone, one cannot watch and rate image at the same time.
This can be done by combine up exiftool with a file manager having preview ability
or an image viewer. Next, I will show how to integrate exiftool capability in
the file manager &lt;code&gt;ranger&lt;/code&gt; and the image viewer &lt;code&gt;sxiv&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;file-types-supported-by-exiftool&#34;&gt;File types supported by exiftool&lt;/h3&gt;
&lt;p&gt;In fact, the version &lt;code&gt;11.88&lt;/code&gt; of exiftool already supports a large set of file types.
Thus, what has been and will be said is not limited to images and rating.&lt;/p&gt;
&lt;div class=&#34;table-caption&#34;&gt;
  &lt;span class=&#34;table-number&#34;&gt;Table 1&lt;/span&gt;:
  File types supported by exiftool (v11.88) (r = read, w = write, c = create).
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3FR&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DR4&lt;/code&gt;   (r/w/c)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ITC&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ODP&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RIFF&lt;/code&gt;  (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3G2&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DSS&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;J2C&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ODS&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RSRC&lt;/code&gt;  (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3GP&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DV&lt;/code&gt;    (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;JNG&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ODT&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RTF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;A&lt;/code&gt;     (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DVB&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;JP2&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;OFR&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RW2&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AA&lt;/code&gt;    (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DVR&lt;/code&gt;-&lt;code&gt;MS&lt;/code&gt; (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;JPEG&lt;/code&gt;  (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;OGG&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RWL&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AAE&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DYLIB&lt;/code&gt; (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;JSON&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;OGV&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RWZ&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AAX&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EIP&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;K25&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;OPUS&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RM&lt;/code&gt;    (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ACR&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EPS&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;KDC&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ORF&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SEQ&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AFM&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EPUB&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;KEY&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;OTF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SKETCH&lt;/code&gt; (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AI&lt;/code&gt;    (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ERF&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LA&lt;/code&gt;    (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PAC&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SO&lt;/code&gt;    (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AIFF&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EXE&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LFP&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PAGES&lt;/code&gt; (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SR2&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;APE&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EXIF&lt;/code&gt;  (r/w/c)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LNK&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PBM&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SRF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ARQ&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EXR&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LRV&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PCD&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SRW&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ARW&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EXV&lt;/code&gt;   (r/w/c)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;M2TS&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PCX&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SVG&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ASF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;F4A&lt;/code&gt;, &lt;code&gt;F4V&lt;/code&gt; (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;M4A&lt;/code&gt;, &lt;code&gt;M4V&lt;/code&gt; (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PDB&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SWF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AVI&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FFF&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MAX&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PDF&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;THM&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AVIF&lt;/code&gt;  (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FITS&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MEF&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PEF&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TIFF&lt;/code&gt;  (r/w)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;AZW&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLA&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MIE&lt;/code&gt;   (r/w/c)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PFA&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TORRENT&lt;/code&gt; (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BMP&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLAC&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MIFF&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PFB&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TTC&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BPG&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLIF&lt;/code&gt;  (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MKA&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PFM&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TTF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BTF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLV&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MKS&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PGF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TXT&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CHM&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FPF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MKV&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PGM&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;VCF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;COS&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FPX&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MNG&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PLIST&lt;/code&gt; (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;VRD&lt;/code&gt;   (r/w/c)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CR2&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GIF&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MOBI&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PICT&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;VSD&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CR3&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GPR&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MODD&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PMP&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WAV&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CRM&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GZ&lt;/code&gt;    (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MOI&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PNG&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WDP&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CRW&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HDP&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MOS&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PPM&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WEBP&lt;/code&gt;  (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CS1&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HDR&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MOV&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PPT&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WEBM&lt;/code&gt;  (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CSV&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HEIC&lt;/code&gt;  (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MP3&lt;/code&gt;   (r)&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PPTX&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WMA&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DCM&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HEIF&lt;/code&gt;  (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MP4&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PS&lt;/code&gt;    (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WMV&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DCP&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HTML&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MPC&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PSB&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WTV&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DCR&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ICC&lt;/code&gt;   (r/w/c)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MPG&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PSD&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WV&lt;/code&gt;    (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DFONT&lt;/code&gt; (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ICS&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MPO&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PSP&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;X3F&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DIVX&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IDML&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MQV&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QTIF&lt;/code&gt;  (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;XCF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DJVU&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IIQ&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MRW&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;R3D&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;XLS&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DLL&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IND&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MXF&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RA&lt;/code&gt;    (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;XLSX&lt;/code&gt;  (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DNG&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;INSP&lt;/code&gt;  (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NEF&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RAF&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;XMP&lt;/code&gt;   (r/w/c)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DOC&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;INSV&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NRW&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RAM&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ZIP&lt;/code&gt;   (r)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DOCX&lt;/code&gt;  (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;INX&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;NUMBERS&lt;/code&gt; (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RAR&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;DPX&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ISO&lt;/code&gt;   (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;O&lt;/code&gt;     (r)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RAW&lt;/code&gt;   (r/w)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;ranger&#34;&gt;ranger&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ranger/ranger/&#34;&gt;ranger&lt;/a&gt; is a free and open-source CLI files manager I&amp;rsquo;m using for years. It is very handy to select
images and preview them&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Append the following snippet in &lt;code&gt;~/.config/ranger/commands.py&lt;/code&gt;.
It will add the custom command &lt;code&gt;rate_image &amp;lt;0-5&amp;gt; &amp;lt;files&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ~/.config/ranger/commands.py&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;rate_image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;:rate_image &amp;lt;0-5&amp;gt; &amp;lt;files&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Command for rating image with exiftools.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
	&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
	    &lt;span class=&#34;n&#34;&gt;rating_score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rate_image: a rating score is required!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bad&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
	    &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	    &lt;span class=&#34;n&#34;&gt;cwd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;thisdir&lt;/span&gt;
	    &lt;span class=&#34;n&#34;&gt;cf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;thisfile&lt;/span&gt;
	    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cwd&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Error: no file selected for deletion!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bad&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
	    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;marked_items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shell_escaped_basename&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;marked_items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
		&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mark_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shell_escaped_basename&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;exiftool -rating=&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rating_score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; \
		  &lt;span class=&#34;s2&#34;&gt;&amp;#34; -overwrite_original_in_place &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;
	&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Run command: &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;communicate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;returncode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	    &lt;span class=&#34;c1&#34;&gt;# This is a generic function to print text in ranger.&lt;/span&gt;
	    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Succeeded to rate image &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; \
			   &lt;span class=&#34;s2&#34;&gt;&amp;#34; with score &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rating_score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;It remains to define some key bindings to be granted the full power of &lt;code&gt;ranger&lt;/code&gt;.
Append the following snippet to &lt;code&gt;~/.config/ranger/rc.conf&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cfg&#34; data-lang=&#34;cfg&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ~/.config/ranger/rc.conf&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;map r1 rate_image 1&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;map r2 rate_image 2&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;map r3 rate_image 3&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;map r4 rate_image 4&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;map r5 rate_image 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The resulting workflow is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select images with &lt;code&gt;SPC&lt;/code&gt; (single selection) or &lt;code&gt;v&lt;/code&gt; (reverse selection).&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;r&lt;/code&gt; and the rating &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;5&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img src=&#34;https://firminmartin.com/ox-hugo/ranger_rating.gif&#34;/&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;sxiv&#34;&gt;sxiv&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/muennich/sxiv&#34;&gt;sxiv&lt;/a&gt; is a free, open-source, lightweight and scriptable image viewer.
Add the following entries in &lt;code&gt;~/.config/sxiv/exec/key-handler&lt;/code&gt;&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ~/.config/sxiv/exec/key-handler&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; in
&lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;C-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;      tr &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -0 -I &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; exiftool -rating&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -overwrite_original_in_place &lt;span class=&#34;s2&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;C-2&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;      tr &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -0 -I &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; exiftool -rating&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; -overwrite_original_in_place &lt;span class=&#34;s2&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;C-3&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;      tr &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -0 -I &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; exiftool -rating&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; -overwrite_original_in_place &lt;span class=&#34;s2&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;C-4&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;      tr &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -0 -I &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; exiftool -rating&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; -overwrite_original_in_place &lt;span class=&#34;s2&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;C-5&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;      tr &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -0 -I &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; exiftool -rating&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; -overwrite_original_in_place &lt;span class=&#34;s2&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The resulting workflow is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open images with &lt;code&gt;sxiv&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;C-x C-&amp;lt;1..5&amp;gt;&lt;/code&gt; to rate the current image.&lt;/li&gt;
&lt;li&gt;Or mark images with &lt;code&gt;m&lt;/code&gt;&lt;sup id=&#34;fnref:7&#34;&gt;&lt;a href=&#34;#fn:7&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;, toggle thumbnails mode with &lt;code&gt;RET&lt;/code&gt; and press &lt;code&gt;C-x C-&amp;lt;1..5&amp;gt;&lt;/code&gt; to rate selected images.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bonus&#34;&gt;Bonus&lt;/h2&gt;
&lt;p&gt;Some interesting tips are presented here.
The main dependencies are &lt;code&gt;zsh&lt;/code&gt; and &lt;code&gt;GNU parallel&lt;/code&gt;, adapt it
to fit your need.&lt;/p&gt;
&lt;h3 id=&#34;rate-or-view-images-of-specific-rating&#34;&gt;Rate or view images of specific rating&lt;/h3&gt;
&lt;p&gt;The long command below search all JPG files (potentially symlink) of rating 3, 4
or 5 and view them with &lt;code&gt;sxiv&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 1. Find recursively all JPG under the current directory&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 2. Use GNU parallel, for each JPG&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#    (a) noglob (zsh specific): disable zsh globing to prevent &amp;#34;No such file&amp;#34; error&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#    (b) Build the string &amp;#34;$Rating $Filepath&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#    (c) Remove the last line of exiftool output which count the amounts of the files.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#    (d) Keep entry with $Rating in {3, 4, 5}. Remove the first space.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 3. Use GNU parallel: view at most 250 found images with sxiv at a time.&lt;/span&gt;
find -L . -type f -regex &lt;span class=&#34;s2&#34;&gt;&amp;#34;.*\.jpg&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
parallel -L &lt;span class=&#34;m&#34;&gt;5000&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;noglob exiftool -p &amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$Rating $Filepath&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; -f -q -q {} | \
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;   head --lines=-1 | \
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;   awk &amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$1 ~ /[345]/ {$1=&amp;#34;&amp;#34;; print substr($0, 2)}&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
parallel -L &lt;span class=&#34;m&#34;&gt;250&lt;/span&gt; -q sxiv &lt;span class=&#34;s2&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Some remarks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To see unrated images, use &lt;code&gt;-&lt;/code&gt; as rating, then you can rate them with &lt;code&gt;sxiv&lt;/code&gt; as above.&lt;/li&gt;
&lt;li&gt;This one-shot command is fast enough for hundreds of images. Above this amount, you may
want to take some time to dump the result in a file as follows.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;find -L -type f -regex &lt;span class=&#34;s2&#34;&gt;&amp;#34;.*\.jpg&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
parallel -L &lt;span class=&#34;m&#34;&gt;5000&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;noglob exiftool -p &amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$Rating $Filename&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; -f -q -q {} | \
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  head --lines=-1 | \
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  awk &amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$1 ~ /[^0-]/ {print $0}&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ratingdb.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;And view images with specific rating with this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;$1 ~ /345/ {$1=&amp;#34;&amp;#34;; print substr($0, 2)}&amp;#39;&lt;/span&gt; ratingdb.txt &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
parallel -L &lt;span class=&#34;m&#34;&gt;250&lt;/span&gt; -q sxiv &lt;span class=&#34;s2&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;The best would be writing a python script to maintain an SQLite database, and
adapt the script of ranger and sxiv above to update the database each time a
file rating changed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shuf&lt;/code&gt; may be used after &lt;code&gt;awk&lt;/code&gt; to shuffle images before viewing them.&lt;/li&gt;
&lt;li&gt;Actually, no one will type again and again those lengthy commands. I either
use &lt;code&gt;C-R&lt;/code&gt; in &lt;code&gt;zsh&lt;/code&gt; with &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt; for casual ones or add them as entries in &lt;a href=&#34;https://github.com/knqyf263/pet&#34;&gt;pet&lt;/a&gt;, a
manager of parametrizable snippet.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;migrate-xmp-rating-into-image-metadata&#34;&gt;Migrate XMP rating into image metadata&lt;/h3&gt;
&lt;p&gt;If you migrate from &lt;code&gt;darktable&lt;/code&gt; or have XMP files with rating, you can try the following commands.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;zmodload zsh/mapfile
&lt;span class=&#34;c1&#34;&gt;# 1. Find recursively all XMP under the current directory&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 2. Use GNU parallel, for each XMP&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   (a) Extract the rating with grep and awk; put it in $RATE.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   (b) Append the image path to .xmp-$RATE-rating.db&lt;/span&gt;
find . -type f -regex &lt;span class=&#34;s2&#34;&gt;&amp;#34;.*\.xmp&amp;#34;&lt;/span&gt; -print0 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
parallel -0  &lt;span class=&#34;s1&#34;&gt;&amp;#39;TMP=$(grep -o &amp;#34;Rating=\&amp;#34;[012345]\&amp;#34;&amp;#34; {} | \
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  awk &amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{print gensub(/Rating=&amp;#34;([0-5])&amp;#34;/, &amp;#34;\1&amp;#34;, &amp;#34;g&amp;#34;, $1)}&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;); \
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  echo {} &amp;gt;&amp;gt; xmp-$TMP-rating.db&amp;#39;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 3. For each $RATE:&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;1..5&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;FNAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;xmp-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;-rating.db&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# For each file in .xmp-$RATE-rating.db&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; f in &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(f)mapfile[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$FNAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;# Use exiftool to rate it with the corresponding $RATE&lt;/span&gt;
	exiftool -rating&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; -overwrite_original_in_place &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;%.*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Dozen hours for 950.000 images.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Statistical classification of images. For each class, it creates a directory in which each symbolic link is associated to the actual image.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Beware, without &lt;code&gt;-overwrite_original_in_place&lt;/code&gt;, &lt;a href=&#34;https://exiftool.org/forum/index.php?topic=6308.0&#34;&gt;symlink will be removed&lt;/a&gt;!&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;You may notice that you can&amp;rsquo;t write MP3 metadata. &lt;code&gt;ffmpeg&lt;/code&gt; should be used instead.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;As long as you use the right terminal emulator, &lt;em&gt;e.g.&lt;/em&gt; iTerm, kitty, urxvt, xterm &lt;em&gt;etc.&lt;/em&gt; From my past experience, &lt;a href=&#34;https://github.com/elementary/terminal&#34;&gt;Elementary OS&amp;rsquo;s pantheon-terminal&lt;/a&gt; doesn&amp;rsquo;t work.&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;If this file doesn&amp;rsquo;t exist, you can copy the sample one: &lt;code&gt;mkdir -p ~/.config/sxiv/exec/ &amp;amp;&amp;amp; cp /usr/share/doc/sxiv/examples/key-handler .&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:7&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/muennich/sxiv/blob/master/config.def.h&#34;&gt;sxiv/config.def.h&lt;/a&gt; for more keybindings to mark images.&amp;#160;&lt;a href=&#34;#fnref:7&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>linux</category>
            
          
            
              <category>ranger</category>
            
          
            
              <category>exiftool</category>
            
          
            
              <category>zsh</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Read and Compose Email in Emacs with Notmuch</title>
        <link>https://firminmartin.com/en/posts/2020/10/read_email_in_emacs_with_notmuch/</link>
        <pubDate>Sun, 04 Oct 2020 00:00:00 +0200</pubDate>
        
        <atom:modified>Mon, 01 Mar 2021 09:47:12 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2020/10/read_email_in_emacs_with_notmuch/</guid>
        <description>It has been 18 months that I read &amp;amp; write my emails in Emacs. No need to say I have enjoyed the mouse-free experience brought by Emacs. Recently, I had to keep track a new email account. So I came across my old note written back then which I enhanced in this post. I made lots of updates subsequently including password management through pass, multi-accounts support etc. to make it as complete as possible.</description>
        <content:encoded>&lt;p&gt;It has been 18 months that I read &amp;amp; write my emails in Emacs. No need to say I have enjoyed
the mouse-free experience brought by Emacs. Recently, I had to keep track a new
email account. So I came across my old note written back then which I enhanced
in this post. I made lots of updates subsequently including password management
through &lt;code&gt;pass&lt;/code&gt;, multi-accounts support &lt;em&gt;etc.&lt;/em&gt; to make it as complete as possible.&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A full back-and-forth cycle of email consists to&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Receive email&lt;/strong&gt; through a program which synchronize emails locally from an
email server.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Read email&lt;/strong&gt; through a program (&lt;a href=&#34;https://en.wikipedia.org/wiki/Email%5Fclient&#34;&gt;MUA&lt;/a&gt;) whose the UI offers an organized &amp;amp; handy
presentation of emails.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compose email&lt;/strong&gt; in whatever editor.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Send email&lt;/strong&gt; with a &lt;a href=&#34;https://en.wikipedia.org/wiki/Message%5Ftransfer%5Fagent&#34;&gt;mail transfer agent&lt;/a&gt; or an interface of it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I made the following choices which I will detail the configuration throughout this post:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Receive email&lt;/strong&gt;: &lt;a href=&#34;https://github.com/OfflineIMAP/offlineimap&#34;&gt;offlineimap&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Read email&lt;/strong&gt;: &lt;a href=&#34;https://notmuchmail.org/notmuch-emacs/&#34;&gt;notmuch.el&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compose email&lt;/strong&gt;: &lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html%5Fmono/message.html&#34;&gt;Emacs message mode&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Send email&lt;/strong&gt;: &lt;a href=&#34;https://github.com/vapniks/smtpmail-multi&#34;&gt;smtpmail-multi&lt;/a&gt; to send email through multiple SMTP servers.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As you may have seen, except the reception of email, the remaining can be
done within Emacs.&lt;/p&gt;
&lt;h2 id=&#34;receiving-email&#34;&gt;Receiving email&lt;/h2&gt;
&lt;p&gt;As stated above, we use &lt;code&gt;offlineimap&lt;/code&gt; to fetch emails from potentially multiple
mailbox. But most importantly, we store all emails &lt;strong&gt;locally&lt;/strong&gt; for two purposes:
&lt;strong&gt;1.&lt;/strong&gt; to be able to read emails offline, &lt;strong&gt;2.&lt;/strong&gt; to not mess up tags synchronization
which may cause data loss. You may think that your huge mailbox would take a
tremendous place in your disk. Well, I can say that if you pay attention to
keep only one copy of your emails&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, it should not take much. For instance,
I have 2.6k emails taking 460MB of the disk.&lt;/p&gt;
&lt;h3 id=&#34;configure-offlineimap&#34;&gt;Configure offlineimap&lt;/h3&gt;
&lt;p&gt;Install &lt;code&gt;offlineimap&lt;/code&gt; with your favorite package manager&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;. Then copy
the minimal configuration (the path depends on your distribution).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;cp /usr/share/doc/offlineimap/examples/offlineimap.conf.minimal ~/.offlineimaprc
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Here is the relevant part of my configuration (&lt;code&gt;~/.offlineimaprc&lt;/code&gt;) for reference.
See the documentation in &lt;code&gt;/usr/share/doc/offlineimap/examples/offlineimap.conf&lt;/code&gt;
or &lt;a href=&#34;https://wiki.archlinux.org/index.php/OfflineIMAP&#34;&gt;Archwiki&lt;/a&gt; for more information. Note the &lt;code&gt;postsynchook&lt;/code&gt; option at the account
level: it&amp;rsquo;s an email tagging script which is run as soon as new email arrives. We
will come soon to its content in this section. Remember what I said regarding
the space taken by locally stored email? Well, they remain tiny provided that
they are not duplicated elsewhere. That&amp;rsquo;s not always the case, for instance
Gmail may store an email in the folder &lt;code&gt;[Gmail].Important&lt;/code&gt; beside &lt;code&gt;[Gmail].All Mail&lt;/code&gt;.
You may consider to filter out the extra folders you don&amp;rsquo;t want as below with a
python&amp;rsquo;s lambda expression or a function (see the documentation).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ~/.offlineimaprc&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;general&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;accounts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Acc1_Gmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Acc2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Acc3&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# comma-separated list of accounts&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Account&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Acc1_Gmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;localrepository&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LocalAcc1&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;remoterepository&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RemoteAcc1&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;postsynchook&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~/.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;postsync&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# notmuch tagging script&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;utf8foldernames&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;yes&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Repository&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LocalAcc1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Maildir&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;localfolders&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~/.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;acc1&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@gmail.com&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Repository&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RemoteAcc1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Gmail&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;remoteuser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;acc1&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@gmail.com&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;remotepass&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sslcacertfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;etc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;certs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ca&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;certificates&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crt&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;readonly&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# readonly if you don&amp;#39;t want mess up with the &amp;#39;unread&amp;#39; tag...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;folderfilter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foldername&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foldername&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[Gmail].All Mail&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Account&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Acc2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;launch-offlineimap-automatically-at-boot&#34;&gt;Launch offlineimap automatically at boot&lt;/h3&gt;
&lt;p&gt;You would certainly want to launch automatically &lt;code&gt;offlineimap&lt;/code&gt; at boot.
This can be done with &lt;code&gt;systemd&lt;/code&gt;. In my case, I have three accounts, &lt;a href=&#34;https://wiki.archlinux.org/index.php/OfflineIMAP#Tips%5Fand%5Ftricks&#34;&gt;it&amp;rsquo;s
advised&lt;/a&gt; &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; to create three separated &lt;code&gt;systemd&lt;/code&gt; services and set &lt;code&gt;maxsyncaccounts = 1&lt;/code&gt; in &lt;code&gt;~/.offlineimaprc&lt;/code&gt; as we have done above.&lt;/p&gt;
&lt;p&gt;Instead of write three different system service files, I write the following
&lt;strong&gt;template unit file&lt;/strong&gt; where the variable &lt;code&gt;%i&lt;/code&gt; will match later with an account
name in &lt;code&gt;.offlineimaprc&lt;/code&gt;. (Note that you should avoid &amp;ldquo;@&amp;rdquo; in the account name
since &lt;code&gt;systemd&lt;/code&gt; gives it a precise meaning).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cfg&#34; data-lang=&#34;cfg&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ~/.config/systemd/user/offlineimap@.service&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;[Unit]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Sync mail with offlineIMAP for Account %i in .offlineimaprc&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Documentation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;man:offlineimap(1)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[Service]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;ExecStart&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;/usr/bin/offlineimap -a %i -u basic&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Restart&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;always&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;RestartSec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;60&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[Install]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;WantedBy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;default.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then run &lt;code&gt;systemctl daemon-reload&lt;/code&gt; to load the new service file.
The following commands enable the auto-start on boot and launch the service right now.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; --user --now offlineimap@account-1.service
systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; --user --now offlineimap@account-2.service
systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; --user --now offlineimap@account-3.service
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Note that &lt;code&gt;account-*&lt;/code&gt; is the account name appeared in each &lt;code&gt;[ Account XXX ]&lt;/code&gt; section.
If everything goes well, &lt;code&gt;offlineimap&lt;/code&gt; will sync emails on the next boot automatically.&lt;/p&gt;
&lt;h3 id=&#34;auto-tagging-with-notmuch&#34;&gt;Auto-tagging with notmuch&lt;/h3&gt;
&lt;p&gt;The next thing to do is email auto-tagging, without this feature your mailbox
will be a nightmare. Again, install &lt;a href=&#34;https://notmuchmail.org/&#34;&gt;notmuch&lt;/a&gt; with your favorite package manager.
We will write the script aforementioned so that email be filtered as soon as
they are synced locally.&lt;/p&gt;
&lt;h4 id=&#34;configurate-notmuch&#34;&gt;Configurate notmuch&lt;/h4&gt;
&lt;p&gt;Before starting to use notmuch, you must configure it. In particular, you have to set the
database path, your email accounts which appeared in &lt;code&gt;~/.offlineimaprc&lt;/code&gt;,
tagging rule for incoming email and tag to exclude by default when searching.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cfg&#34; data-lang=&#34;cfg&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ~/.notmuch-config&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;[database]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;/home/firmart/.email&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[user]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Firmin Martin&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;primary_email&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;my-acc1@gmail.com&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;other_email&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;my-acc2@gmail.com; my-acc3@gmail.com&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[new]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;inbox;unread;&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;ignore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[search]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;exclude_tags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;deleted;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[maildir]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;synchronize_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;expose-highly-active-addresses&#34;&gt;Expose highly active addresses&lt;/h4&gt;
&lt;p&gt;The following command lists email-senders address sorted by decreasing amounts of emails sent&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;notmuch show --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;json --body&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt; --entire-thread&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq &lt;span class=&#34;s1&#34;&gt;&amp;#39;.[] | .[] | .[0].headers.From&amp;#39;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; uniq -c &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -n
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Replace &lt;code&gt;From&lt;/code&gt; by &lt;code&gt;To&lt;/code&gt; to expose highly active mailing list.&lt;/p&gt;
&lt;p&gt;The snippet above help us to find out the best contributors of our inbox to tag them
properly.&lt;/p&gt;
&lt;h4 id=&#34;auto-tagging-script&#34;&gt;Auto-tagging script&lt;/h4&gt;
&lt;p&gt;Here is my little shell script &lt;code&gt;~/.email/postsync.sh&lt;/code&gt; which is run once &lt;code&gt;offlineimap&lt;/code&gt;
finished to sync my emails. You might want to take a look at &lt;code&gt;notmuch help search-terms&lt;/code&gt;
to understand the syntax of tagging commands.&lt;/p&gt;
&lt;p&gt;I identify several visibility categories of emails:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I don&amp;rsquo;t want to see them at all and they&amp;rsquo;re harmful =&amp;gt; spam&lt;/li&gt;
&lt;li&gt;I don&amp;rsquo;t want to see them at all =&amp;gt; blacklisted&lt;/li&gt;
&lt;li&gt;I want to see them but it doesn&amp;rsquo;t matter when =&amp;gt; move out inbox&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s important! =&amp;gt; keep them in the inbox and tag them more&lt;/li&gt;
&lt;/ol&gt;
&lt;!--listend--&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# ~/.email/postsync.sh&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# tag_new &amp;lt;tags&amp;gt; &amp;lt;search-term&amp;gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; tag_new &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; notmuch tag &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; -- tag:inbox and &lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# blacklist &amp;lt;search-term&amp;gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; blacklist &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; tag_new &lt;span class=&#34;s2&#34;&gt;&amp;#34;-inbox -unread +deleted&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# spam &amp;lt;search-term&amp;gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; spam &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; tag_new &lt;span class=&#34;s2&#34;&gt;&amp;#34;-inbox -unread +spam +deleted&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# security &amp;lt;search-term&amp;gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; security &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; tag_new &lt;span class=&#34;s2&#34;&gt;&amp;#34;-inbox +Security&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# update : let notmuch process new mails&lt;/span&gt;
notmuch new

&lt;span class=&#34;c1&#34;&gt;# blacklisting&lt;/span&gt;
notmuch tag -inbox -- tag:deleted and tag:inbox
blacklist &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:/.*@.*[.]pinterest[.]com/&amp;#34;&lt;/span&gt;
blacklist &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:/.*@linkedin[.]com/&amp;#34;&lt;/span&gt;
blacklist &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:/.*@quora[.]com/&amp;#34;&lt;/span&gt;
blacklist &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:noreply@medium.com&amp;#34;&lt;/span&gt;
blacklist &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:noreply@youtube.com&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## this list continue with 100+ addresses ...&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# ... and spams&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# `+spam&amp;#39; can&amp;#39;t be found at all in notmuch if `exclude_tags=deleted;spam;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# is set in the [search] section of `.notmuch-config&amp;#39;.&lt;/span&gt;
spam &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:esf@cnnsimail.com&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Family first&lt;/span&gt;
tag_new &lt;span class=&#34;s2&#34;&gt;&amp;#34;+family&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:dad@gmail.com or from:mom@gmail.com&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Friends&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Co-workers&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Mailing list&lt;/span&gt;
tag_new &lt;span class=&#34;s2&#34;&gt;&amp;#34;-inbox +CoqClub&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;to:coq-club@inria.fr or [Coq-Club]&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Newsletter&lt;/span&gt;
tag_new &lt;span class=&#34;s2&#34;&gt;&amp;#34;-inbox +SE.newsletter&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:do-not-reply@stackoverflow.email&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Universities&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Security (accounts/verification code/email confirmation/... etc.)&lt;/span&gt;
security &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:no-reply@accounts.google.com or accounts-noreply@google.com&amp;#34;&lt;/span&gt;
security &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:account-security-noreply@account.microsoft.com&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# and more ...&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# From me&lt;/span&gt;
tag_new &lt;span class=&#34;s2&#34;&gt;&amp;#34;-inbox -unread +FromMe&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;from:my-main-gmail@gmail.com or from:univ-account@my-univ.fr or from:my-second@gmail.com&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;reading-mail&#34;&gt;Reading mail&lt;/h2&gt;
&lt;h3 id=&#34;notmuch-dot-el&#34;&gt;notmuch.el&lt;/h3&gt;
&lt;p&gt;Follow the instructions given on the &lt;a href=&#34;https://notmuchmail.org/notmuch-emacs/&#34;&gt;official website&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;key-bindings&#34;&gt;Key-bindings&lt;/h4&gt;
&lt;p&gt;The key-bindings I use are from &lt;a href=&#34;https://github.com/emacs-evil/evil-collection/blob/master/modes/notmuch/evil-collection-notmuch.el&#34;&gt;evil-collection&lt;/a&gt;. They are quite different from the default ones.
You can define new keybindings for different notmuch views (&lt;code&gt;tree&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, &lt;code&gt;hello&lt;/code&gt;,
&lt;code&gt;search&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;) as below, but usually I rarely tag manually an email (except flagging important one).
Instead, I add a new tagging rule as depicted above.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;define-key&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;notmuch-show-mode-map&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;S&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;delete message and move on&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-show-tag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;+deleted&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-unread&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;notmuch-show-next-open-message-or-pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;compose-email&#34;&gt;Compose email&lt;/h2&gt;
&lt;p&gt;Simply press &lt;code&gt;C-x m&lt;/code&gt; (&lt;code&gt;compose-mail&lt;/code&gt;) in Emacs to compose an email to send. Normally, the
&lt;code&gt;From:=/=To:&lt;/code&gt; fields can be autocompleted.&lt;/p&gt;
&lt;h2 id=&#34;send-email&#34;&gt;Send email&lt;/h2&gt;
&lt;p&gt;Unless your local system is configured for sending email using &lt;a href=&#34;https://en.wikipedia.org/wiki/Sendmail&#34;&gt;sendmail&lt;/a&gt;, you
may want to access a remote SMTP server.&lt;/p&gt;
&lt;h3 id=&#34;smtp-configuration&#34;&gt;SMTP configuration&lt;/h3&gt;
&lt;p&gt;Below is a fragment of my SMTP setup. You should acquire this information from
the host (&lt;a href=&#34;https://support.google.com/a/answer/176600&#34;&gt;Gmail&lt;/a&gt;&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;, your institution, your company etc.). Using &lt;code&gt;smtpmail&lt;/code&gt; is not
enough to sending email with different accounts. Fortunately, the package
&lt;a href=&#34;https://github.com/vapniks/smtpmail-multi&#34;&gt;smtpmail-multi&lt;/a&gt; made the task easier.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;use-package&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;smtpmail-multi&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;:ensure&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;:config&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;smtpmail-multi-accounts&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;host&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;firmin.martin@host.fr&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;smtp.host.fr&amp;#34;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;587&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;firmin.martin@host.fr&amp;#34;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;gmail-main&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;firmin.martin@gmail.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;smtp.gmail.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;587&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;firmin.martin@gmail.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;

    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;smtpmail-multi-associations&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;firmin.martin@host.fr&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;firmin.martin@gmail.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;gmail-main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;

    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;smtpmail-multi-default-account&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;&amp;#39;gmail-main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;message-send-mail-function&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;&amp;#39;smtpmail-multi-send-it&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;smtpmail-debug-info&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;smtpmail-debug-verbose&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then you have to put your credentials somewhere. Such places are designated by
the variable &lt;code&gt;auth-sources&lt;/code&gt; which defaults to &lt;code&gt;(&amp;quot;~/.authinfo&amp;quot; &amp;quot;~/.authinfo.gpg&amp;quot; &amp;quot;~/.netrc&amp;quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For instance, put the following in &lt;code&gt;~/.authinfo&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;machine smtp.host.fr login firmin.martin port 587 password abc123
machine smtp.gmail.com login firmin.martin port 587 password abc123
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;patch-fully-qualified-domain-name--fqdn&#34;&gt;Patch: Fully-Qualified Domain Name (FQDN)&lt;/h3&gt;
&lt;p&gt;You may encounter issue regarding the FQDN when sending email. I have the
following patch in my configuration coming from &lt;a href=&#34;https://emacs.stackexchange.com/a/32188/23697&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;when&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;emacs-major-version&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;smtpmail-local-domain&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;car&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;split-string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;shell-command-to-string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;hostname -f&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;bonus-passwords-encryption-with-pass&#34;&gt;Bonus: passwords encryption with pass&lt;/h2&gt;
&lt;p&gt;You may have seen a security hole which would hopefully make you uncomfortable:
we have written credentials in plain text. Let&amp;rsquo;s fix it. I assume in the
following that the reader has already setup &lt;a href=&#34;https://www.gnupg.org/gph/en/manual.pdf&#34;&gt;gpg&lt;/a&gt; (2.1+) and &lt;a href=&#34;https://www.passwordstore.org/&#34;&gt;pass&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Remember, we have stored passwords in &lt;code&gt;~/.offlineimaprc&lt;/code&gt; to pull emails locally
with &lt;code&gt;offlineimap&lt;/code&gt; and in &lt;code&gt;~/.authinfo&lt;/code&gt; so that Emacs is able to send email.&lt;/p&gt;
&lt;h3 id=&#34;dot-offlineimaprc&#34;&gt;~/.offlineimaprc&lt;/h3&gt;
&lt;p&gt;Quoting &lt;a href=&#34;https://wiki.archlinux.org/index.php/OfflineIMAP#Using%5Fpass&#34;&gt;ArchWiki&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a password for your email account.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;pass insert email/myaccount
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a python function that retrieves the password (in &lt;code&gt;~/.offlineimap/pass.py&lt;/code&gt; for instance).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/env python3&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;check_output&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_pass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;account&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;check_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pass email/&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;account&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;splitlines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In &lt;code&gt;.offlineimaprc&lt;/code&gt;, under the general section, indicate the python file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;general&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pythonfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~/.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;offlineimap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;and replace each &lt;code&gt;remotepass = password&lt;/code&gt; by the next one.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;remotepasseval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_pass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;myaccount&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;auth-source-pass&#34;&gt;auth-source-pass&lt;/h3&gt;
&lt;p&gt;To make Emacs read credentials through &lt;code&gt;pass&lt;/code&gt;, we use the package
&lt;a href=&#34;https://github.com/DamienCassou/auth-source-pass&#34;&gt;auth-source-pass&lt;/a&gt; which exactly do the job for us. The configuration is simple.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;use-package&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;auth-source-pass&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;:ensure&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;:config&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;auth-source-pass-enable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You should create a &lt;code&gt;&amp;lt;smtp host&amp;gt;.gpg&lt;/code&gt; with &lt;code&gt;pass --edit email/&amp;lt;smtp host&amp;gt;&lt;/code&gt; for
each smtp server. For instance, the entry of &lt;code&gt;.authinfo&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;machine smtp.host.fr login firmin.martin port 587 password abc123
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;corresponds to &lt;code&gt;~/.password-store/email/smtp.host.fr.gpg&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;abc123
user: firmin.martin
host: smtp.host.fr
port: 587
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;cache-gpg-passphrase&#34;&gt;Cache gpg passphrase&lt;/h3&gt;
&lt;p&gt;By now, &lt;code&gt;offlineimap&lt;/code&gt; and Emacs will retrieve your passwords through
&lt;code&gt;pass&lt;/code&gt;. Great! But, if you setup &lt;code&gt;gpg&lt;/code&gt; without extra configuration, you will be
prompted the passphrase every two hours. Why? The answer lies in the gpg agent
options &lt;code&gt;default-cache-ttl&lt;/code&gt; and &lt;code&gt;--max-cache-ttl&lt;/code&gt;. The &lt;a href=&#34;https://www.gnupg.org/documentation/manuals/gnupg/Agent-Options.html&#34;&gt;documentation&lt;/a&gt; says&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;--default-cache-ttl n
    Set the time a cache entry is valid to n seconds. The default is 600
    seconds. Each time a cache entry is accessed, the entry’s timer is reset. To set
    an entry’s maximum lifetime, use max-cache-ttl. Note that a cached passphrase
    may not be evicted immediately from memory if no client requests a cache
    operation. This is due to an internal housekeeping function which is only run
    every few seconds.

--max-cache-ttl n
    Set the maximum time a cache entry is valid to n seconds. After this time a
    cache entry will be expired even if it has been accessed recently or has
    been set using gpg-preset-passphrase. The default is 2 hours (7200 seconds).
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;That is, by default, the passphrase is cached 10 minutes and can be extended
each time it is accessed up to 2 hours. As we set &lt;code&gt;RestartSec=60&lt;/code&gt; in
&lt;code&gt;~/.config/systemd/user/offlineimap@.service&lt;/code&gt;, it ensures that we reach the
maximum cache time. To increase the cache time permanently to one day, add the
line below in &lt;code&gt;~/.gnupg/gpg-agent.conf&lt;/code&gt;.&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cfg&#34; data-lang=&#34;cfg&#34;&gt;&lt;span class=&#34;na&#34;&gt;max-cache-ttl 86400&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You should restart &lt;code&gt;gpg-agent&lt;/code&gt; to see the effect (&lt;code&gt;gpg -K&lt;/code&gt; should be enough).
At this point, not only are your passwords secure to some extent, but no one can
see and write emails on your behalf after one day without enter the passphrase.&lt;/p&gt;
&lt;h2 id=&#34;addendum-general-workflow&#34;&gt;Addendum: general workflow&lt;/h2&gt;
&lt;p&gt;I summarize below how one maintains this email workflow.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tagging emails&lt;/strong&gt;. Update &lt;code&gt;~/.email/postsync.sh&lt;/code&gt; when necessary (usually to
blacklist some addresses).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Changing password&lt;/strong&gt;. Modify adequately &lt;code&gt;~/.offlineimaprc&lt;/code&gt; and &lt;code&gt;.authinfo&lt;/code&gt;, or
if you use &lt;code&gt;pass&lt;/code&gt; as above, update the passwords with &lt;code&gt;pass edit email/&amp;lt;account&amp;gt;&lt;/code&gt;. Beware, if you only change your password remotely, you won&amp;rsquo;t
be able to receive and (possibly) write any email.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Adding new email&lt;/strong&gt;. Each time you want to add a new email account in you
workflow, you should&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;update &lt;code&gt;.offlineimaprc&lt;/code&gt;: update &lt;code&gt;accounts&lt;/code&gt;, add one more account section plus&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;associated local/remote sections;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;update &lt;code&gt;.notmuch-config&lt;/code&gt;: update &lt;code&gt;primary_email&lt;/code&gt; or &lt;code&gt;other_email&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;update &lt;code&gt;smtpmail-multi-accounts&lt;/code&gt; and &lt;code&gt;smtpmail-multi-associations&lt;/code&gt; if that
account may be used to write email;&lt;/li&gt;
&lt;li&gt;update credentials with &lt;code&gt;pass&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;systemctl enable --user --now offlineimap@ACCOUNT-NAME.service&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;(optional) update &lt;code&gt;postsync.sh&lt;/code&gt; to tag the email written by yourself.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;After setting up &lt;code&gt;offlineimap&lt;/code&gt; correctly, you can check this information by running &lt;code&gt;fdupes -mr .&lt;/code&gt; under &lt;code&gt;~/.email/&lt;/code&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Note that, at the time of writing, &lt;code&gt;offlineimap&lt;/code&gt; is &lt;a href=&#34;https://github.com/OfflineIMAP/offlineimap/issues/670&#34;&gt;in the process&lt;/a&gt; to port from &lt;code&gt;python2&lt;/code&gt; (2020-01-01 ⚰️) to &lt;code&gt;python3&lt;/code&gt;, see &lt;a href=&#34;https://github.com/OfflineIMAP/offlineimap3&#34;&gt;OfflineIMAP/offlineimap3&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://www.offlineimap.org/configuration/2016/01/29/why-i-m-not-using-maxconnctions.html&#34;&gt;OfflineIMAP community&amp;rsquo;s website : No, I&amp;rsquo;m not using maxconnections&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Technically you can aggregate all duplicate email addresses with &lt;code&gt;jq&lt;/code&gt;, but you would have to handle the case, comma-separated addresses, and the &lt;code&gt;&amp;quot;First Last &amp;lt;first.last@gmail.com&amp;gt;&amp;quot;&lt;/code&gt; notation. It&amp;rsquo;s merely an example after all.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;If your Google account has 2-step verification activated, you will likely have to create and use an &lt;a href=&#34;https://support.google.com/accounts/answer/185833?hl=en&amp;amp;ref%5Ftopic=7189145&#34;&gt;app password&lt;/a&gt; instead of your regular password.&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;If you retrieve your emails at a frequency lower than every 10 minutes, then you should also assign the same value of &lt;code&gt;max-cache-ttl&lt;/code&gt; to &lt;code&gt;default-cache-ttl&lt;/code&gt;.&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>emacs</category>
            
          
            
              <category>notmuch</category>
            
          
            
              <category>email</category>
            
          
            
              <category>offlineimap</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Migrate from vimwiki to Org mode</title>
        <link>https://firminmartin.com/en/posts/2020/09/migrate_from_vimwiki_to_org-mode/</link>
        <pubDate>Sat, 12 Sep 2020 00:00:00 +0200</pubDate>
        
        <atom:modified>Mon, 01 Mar 2021 09:47:12 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2020/09/migrate_from_vimwiki_to_org-mode/</guid>
        <description>Around 2016-2017, I used vimwiki a lot to take spare notes of Linux, programming &amp;amp; mathematics related topics. I moved from Vim to Emacs in June 2019 for the great Org mode and never came back. Recently, I wanted to get rid of my good old vimwiki directory and merge it in my org-mode personal wiki (using org-glaux). Since it&amp;rsquo;s a one-time task, I decided to use the only available outdated script then write some Emacs code to fix the result instead of patching the old script.</description>
        <content:encoded>&lt;p&gt;Around 2016-2017, I used vimwiki a lot to take spare notes of Linux, programming &amp;amp; mathematics related topics. I moved from Vim to Emacs in June 2019 for the great Org mode and never came back. Recently, I wanted to get rid of my good old vimwiki directory and merge it in my org-mode personal wiki (using &lt;a href=&#34;https://github.com/firmart/org-glaux&#34;&gt;org-glaux&lt;/a&gt;). Since it&amp;rsquo;s a one-time task, I decided to use the only available outdated script then write some Emacs code to fix the result instead of patching the old script.&lt;/p&gt;
&lt;h2 id=&#34;prelude-the-power-of-vimwiki2org&#34;&gt;Prelude: the power of vimwiki2org&lt;/h2&gt;
&lt;p&gt;I looked for a vimwiki/Org converter, and luckily found &lt;a href=&#34;https://github.com/fasheng/vimwiki2org&#34;&gt;a legacy Perl script&lt;/a&gt; (written 8 years ago). Well, it&amp;rsquo;s better than nothing. To install, as usual&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git clone https://github.com/fasheng/vimwiki2org
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; vimwiki2org
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;After tweaking available options a bit, I came up with this one-liner which outputs the whole vimwiki content into one single Org file &lt;code&gt;vimwiki.org&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;vimwiki2org --no-ignore-lonely-header -L fix index.wiki &amp;gt; vimwiki.org
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The option &lt;code&gt;-L fix&lt;/code&gt; seems necessary to correctly detect subdirectories, such as &lt;code&gt;diary/diary.wiki&lt;/code&gt;. The option &lt;code&gt;--no-ignore-lonely-header&lt;/code&gt; was necessary to prevent some heading be commented out (for a good reason).&lt;/p&gt;
&lt;h2 id=&#34;interlude-reworking-the-remaining&#34;&gt;Interlude: reworking the remaining&lt;/h2&gt;
&lt;h3 id=&#34;fix-possible-encoding-issue&#34;&gt;Fix possible encoding issue&lt;/h3&gt;
&lt;p&gt;An issue I have encountered was the failure to display correctly Unicode. If you have this issue, it means that some characters in the buffer cannot be rendered properly with Unicode. In my case, I have had a &lt;code&gt;.png&lt;/code&gt; disguised as a vimwiki file output into &lt;code&gt;vimwiki.org&lt;/code&gt;. That messes up the forthcoming steps.&lt;/p&gt;
&lt;p&gt;If you are not sure, evaluate (&lt;code&gt;M-:&lt;/code&gt;) the following snippet on the &lt;code&gt;vimwiki.org&lt;/code&gt; buffer.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;decode-coding-string&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;buffer-string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;ss&#34;&gt;&amp;#39;utf-8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;erase-buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Now, save &lt;code&gt;vimwiki.org&lt;/code&gt;. If there is a prompt asking you what encoding do you want to choose, then you should examine whether or not &lt;code&gt;vimwiki.org&lt;/code&gt; contains weird stuff.&lt;/p&gt;
&lt;h3 id=&#34;remove-vimwiki-toc&#34;&gt;Remove vimwiki TOC&lt;/h3&gt;
&lt;p&gt;Auto-generated TOC by vimwiki seems unnecessary since Org mode produce TOC when exporting. It&amp;rsquo;s better to remove them as they create unexportable links. Inspired from &lt;a href=&#34;https://emacs.stackexchange.com/a/38354/23697&#34;&gt;this snippet&lt;/a&gt;, the following snippet removes the content of headline named &lt;code&gt;Contents&lt;/code&gt; (&lt;em&gt;i.e.&lt;/em&gt; TOCs auto-generated by vimwiki).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;let*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;org-element-parse-buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
       &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;progn&lt;/span&gt;
              &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;org-element-map&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;&amp;#39;headline&lt;/span&gt;
                &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;el&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;when&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;equal&lt;/span&gt;
                         &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;car-safe&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;org-element-property&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;:title&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;el&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
                         &lt;span class=&#34;s&#34;&gt;&amp;#34;Contents&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                    &lt;span class=&#34;c1&#34;&gt;;; Here we remove the contents from this headline.&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;setf&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;nthcdr&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;el&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;
              &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;org-element-interpret-data&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;erase-buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then, a little &amp;ldquo;&lt;a href=&#34;https://github.com/emacs-evil/evil&#34;&gt;evil&lt;/a&gt;&amp;rdquo; regex &lt;code&gt;%g/Contents/d&lt;/code&gt; cleans up the remaining empty TOC
headlines. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h3 id=&#34;fix-headlines&#34;&gt;Fix headlines&lt;/h3&gt;
&lt;h4 id=&#34;fix-java-multiple-lines-comment&#34;&gt;Fix Java multiple lines comment&lt;/h4&gt;
&lt;p&gt;I had a converted Java source block containing multi-lines comment like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-org&#34; data-lang=&#34;org&#34;&gt;&lt;span class=&#34;c&#34;&gt;#+begin_src &lt;/span&gt;&lt;span class=&#34;cs&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Comment
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;* on
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;* multiple
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;* lines
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;********/&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#+end_src&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;vimwiki2org&lt;/code&gt; didn&amp;rsquo;t &lt;a href=&#34;https://orgmode.org/manual/Literal-Examples.html#Literal-Examples&#34;&gt;put a comma before asterisk&lt;/a&gt;, and that messes up Org mode headlines. I have luckily only one such case, so I corrected it manually.&lt;/p&gt;
&lt;h3 id=&#34;fix-source-block&#34;&gt;Fix source block&lt;/h3&gt;
&lt;p&gt;I had some source blocks not correctly handled. Apparently, it&amp;rsquo;s possible that source block failed to convert when the content is in the same line that &lt;code&gt;{{{&lt;/code&gt;. Fortunately, only one case hit me. Again, I fixed it manually, but it&amp;rsquo;s very easy to move one line down the content with regex.&lt;/p&gt;
&lt;h3 id=&#34;fix-markup&#34;&gt;Fix markup&lt;/h3&gt;
&lt;p&gt;You may notice that code markup (&lt;em&gt;i.e.&lt;/em&gt; &lt;code&gt;`...`&lt;/code&gt;) failed to convert properly. A quick evil regex do the job: &lt;code&gt;%s/`\(.*?\)`/~\1~/g&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;fix-mathematics-equation&#34;&gt;Fix mathematics equation&lt;/h3&gt;
&lt;p&gt;Well, &lt;a href=&#34;https://raw.githubusercontent.com/vimwiki/vimwiki/master/doc/vimwiki.txt&#34;&gt;vimwiki inline &amp;amp; display style maths&lt;/a&gt; are not converted at all. To be short,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{$ ... }}$&lt;/code&gt; corresponds to inline maths &lt;code&gt;$ ... $&lt;/code&gt; ;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{{$%align% ... }}$&lt;/code&gt; corresponds to maths environment &lt;code&gt;\[$\begin{align} ... \end{align}$\]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And both of them can span on multiple lines.&lt;/p&gt;
&lt;p&gt;Evaluate the following evil regexps &lt;span class=&#34;underline&#34;&gt;in order&lt;/span&gt; fixes respectively the previous issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%s/{{\$%\(\w*\)%\(\(.\|\n\)*?\)}}\$/\\[\\begin{\1}\2\\end{\1}\\]/g&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%s/{{\$\(\(.\|\n\)*?\)}}\$/\\[\1\\]/g&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;move-headline-content-in-org-files&#34;&gt;Move headline content in Org files&lt;/h3&gt;
&lt;p&gt;The last step is optional, but in my opinion is better to move headlines in separated
Org files as they was originally separated as vimwiki files.&lt;/p&gt;
&lt;h4 id=&#34;internal-link&#34;&gt;Fix internal links&lt;/h4&gt;
&lt;p&gt;We have to make link working again. Depending on whether you are using &lt;a href=&#34;https://github.com/firmart/org-glaux&#34;&gt;org-glaux&lt;/a&gt;, use one of the following evil regexps that suits you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Org mode file link: &lt;code&gt;%s/\[\[\(.*?\)\]\[\(.*?\)\]\]/[[file:\1.org][\2]]/g&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;org-glaux&amp;rsquo;s wiki link: &lt;code&gt;%s/\[\[\(.*?\)\]\[\(.*?\)\]\]/[[wiki:../\1][\2]]/g&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;separate-contents-in-org-files&#34;&gt;Separate contents in Org files&lt;/h4&gt;
&lt;p&gt;If you have kept the outline of &lt;code&gt;vimwiki2org&lt;/code&gt; output, &lt;em&gt;i.e.&lt;/em&gt; each second-level headings corresponding to a vimwiki file, then the following snippet, inspired from &lt;a href=&#34;https://emacs.stackexchange.com/a/54944/23697&#34;&gt;this answer&lt;/a&gt;, will output the content of each second-level headline to a single Org file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;defun&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;my-org-export-each-headline&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;&amp;amp;optional&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;s&#34;&gt;&amp;#34;Export each second-level headline to an Org file with the title as filename.
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;If SCOPE is nil headlines in the current buffer are exported.
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;For other valid values for SCOPE see &lt;/span&gt;&lt;span class=&#34;ss&#34;&gt;`org-map-entries&amp;#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;.
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Already existing files are overwritten.&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;;; Widen buffer temporarily as narrowing would affect the exporting.&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;org-with-wide-buffer&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;save-mark-and-excursion&lt;/span&gt;
     &lt;span class=&#34;c1&#34;&gt;;; Loop through each headline.&lt;/span&gt;
     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;org-map-entries&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;;; Get the plain headline text without statistics and make filename.&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;when&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;equal&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;org-current-level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;let*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;car&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;last&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;org-get-outline-path&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;
                 &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;file-name-directory&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;buffer-file-name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
                 &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;concat&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
                 &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;;; Set the active region&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;set-mark&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;org-forward-heading-same-level&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;activate-mark&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;buffer-substring&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;region-beginning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;region-end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;;; Export the region&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;with-temp-buffer&lt;/span&gt;
              &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
              &lt;span class=&#34;c1&#34;&gt;;; Save the buffer to file and kill it.&lt;/span&gt;
              &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;write-file&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
              &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;kill-current-buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))))&lt;/span&gt;
      &lt;span class=&#34;no&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;postlude-how-many-links-are-broken&#34;&gt;Postlude: how many links are broken ?&lt;/h2&gt;
&lt;p&gt;This little section is reserved for &lt;a href=&#34;https://github.com/firmart/org-glaux&#34;&gt;org-glaux&lt;/a&gt; users, of whom I am the only one (for now!). After all those steps, we want to make sure that all internal links are correctly interconnected. This is as simple as calling &lt;code&gt;M-x org-glaux-stats&lt;/code&gt;! That command produces a statistical overview of the current wiki including the number of broken links. As long as vimwiki files are under the same directories, no broken link is detected in my side. However, since we use relative links (see &lt;a href=&#34;#internal-link&#34;&gt;Fix internal links&lt;/a&gt;), they may be broken in the future as soon as they or their target Org files move. I plan to implement (not soon) a &amp;ldquo;safe move&amp;rdquo; feature inside &lt;a href=&#34;https://github.com/firmart/org-glaux&#34;&gt;org-glaux&lt;/a&gt; which preserves page&amp;rsquo;s link when page moves. But before that I should introduce caching (with &lt;em&gt;e.g.&lt;/em&gt; &lt;a href=&#34;https://github.com/l3kn/org-el-cache&#34;&gt;l3kn/org-el-cache&lt;/a&gt;) to annihilate links resolving overheads.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;There is probably a better solution with &lt;code&gt;org-element-map&lt;/code&gt;, but I&amp;rsquo;m not familiar enough with it.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>vim</category>
            
          
            
              <category>emacs</category>
            
          
            
              <category>org-mode</category>
            
          
            
              <category>org-glaux</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Consult dictionaries in Emacs</title>
        <link>https://firminmartin.com/en/posts/2020/06/consult_dictionaries_in_emacs/</link>
        <pubDate>Tue, 09 Jun 2020 00:00:00 +0200</pubDate>
        
        <atom:modified>Mon, 01 Mar 2021 09:47:12 +0100</atom:modified>
        <guid>https://firminmartin.com/en/posts/2020/06/consult_dictionaries_in_emacs/</guid>
        <description>The most time-wasting thing when learning natural languages or reading literature works is nothing more than consulting a dictionary. During my studies, I came through three stages: paperback dictionary, online dictionary and Google Chrome search engines. The time requiring to consult one entry has decreased from a few minutes to dozens of seconds, but I’m still not satisfied with this speed.

 Figure 1: A Kangxi Dictionary. It was quite fascinating to read when I was a child.</description>
        <content:encoded>&lt;p&gt;The most time-wasting thing when learning natural languages or reading
literature works is nothing more than consulting a dictionary. During my
studies, I came through three stages: paperback dictionary, online dictionary
and Google Chrome search engines. The time requiring to consult one entry has
decreased from a few minutes to dozens of seconds, but I’m still not satisfied
with this speed.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;org76a0d62&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;kang-xi.jpg&#34;
         alt=&#34;Figure 1: A Kangxi Dictionary. It was quite fascinating to read when I was a child.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Figure 1: A &lt;a href=&#34;https://en.wikipedia.org/wiki/Kangxi%5FDictionary&#34;&gt;Kangxi Dictionary&lt;/a&gt;. It was quite fascinating to read when I was a child.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It happens it’s been around thirteen months that I moved from Vim to Emacs which
means, in other words, that I handle all text-based file in Emacs. Naturally, I
searched if there was such dictionary package for Emacs. Unsurprisingly, the
author of Ivy, Oleh Krehel (a.k.a. abo-abo) has written an easy-to-use package
named &lt;a href=&#34;https://github.com/abo-abo/define-word&#34;&gt;define-word&lt;/a&gt; for this purpose. In short, at each request
it parses with regex an HTML page, retrieves the word definition and displays
the result on minibuffer. A request can be made from a selected region or a
prompted string.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;orgf5cf769&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;define-word.png&#34;
         alt=&#34;Figure 2: Official screenshot of define-word&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Figure 2: Official screenshot of define-word&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As I just started to work on my first ever package (&lt;a href=&#34;https://github.com/firmart/org-glaux&#34;&gt;org-glaux&lt;/a&gt; to be precise), I
read the source code and learn how it is easy to write a new parser. Of course,
that is due to the design made by abo-abo&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The first online dictionary I
wanted to parse was Wiktionary&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, but because of its wiki specificity, it has
complex markup and hyperlink, so I gave up straight away. Then, I moved on to a
Franco-Chinese dictionary I use from time to time. It works, but there was still
some sporadic issues, such as looking up conjugated verb form doesn’t redirect
to the verb definition but to the verb morphology. Also, the HTML layout was
barely consistent, thus not very interesting to parse for what it provides.&lt;/p&gt;
&lt;p&gt;My thoughts then turned to the Larousse dictionary. This French-French dictionary
despite having the problem of one word might have multiple pages, it has not so
many defects.&lt;/p&gt;
&lt;p&gt;My thoughts then turned to the &lt;a href=&#34;https://www.larousse.fr/dictionnaires/francais/&#34;&gt;Larousse dictionary&lt;/a&gt;. This French-French
dictionary, despite having the problem that one word might have multiple
corresponding pages, it has not so many defects.&lt;/p&gt;
&lt;p&gt;After adding some utilities in the source code, such as HTML special characters
decoding, the Larousse parser I wrote has finally highlighting for lexical
class, examples and etymology (see figures &lt;a href=&#34;#org683df42&#34;&gt;3&lt;/a&gt; &amp;amp;
&lt;a href=&#34;#orga18ff91&#34;&gt;4&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;If I spend more time on this, I would certainly be able to add some cool
features like the possibility to search among multiple dictionaries, and even
combine it to make flashcard with org-drill&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;. It is would be also good to
add a few encyclopedias and synonym dictionaries during my spare time.&lt;/p&gt;
&lt;p&gt;Look up one word now takes an overhead of barely one second&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;. I&amp;rsquo;m quite
happy with the result, but of course still open to a faster solution!&lt;/p&gt;
&lt;p&gt;You can find &lt;a href=&#34;https://github.com/firmart/define-word/tree/fr-larousse&#34;&gt;here&lt;/a&gt; my fork implementing Larousse dictionary and test it by
yourself.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;org683df42&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;define-word-1.png&#34;
         alt=&#34;Figure 3: Looking up the French word &amp;amp;ldquo;couture&amp;amp;rdquo; in Larousse dictionary.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Figure 3: Looking up the French word &amp;ldquo;couture&amp;rdquo; in &lt;a href=&#34;https://www.larousse.fr/dictionnaires/francais/couture&#34;&gt;Larousse&lt;/a&gt; dictionary.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a id=&#34;orga18ff91&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;define-word-2.png&#34;
         alt=&#34;Figure 4: Looking up the French word &amp;amp;ldquo;abandon&amp;amp;rdquo; in Larousse dictionary.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Figure 4: Looking up the French word &amp;ldquo;abandon&amp;rdquo; in &lt;a href=&#34;https://www.larousse.fr/dictionnaires/francais/abandon&#34;&gt;Larousse&lt;/a&gt; dictionary.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://oremacs.com/2015/05/22/define-word/&#34;&gt;According to the author&lt;/a&gt;, define-word only takes it 30 minutes to write.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;At the time of writing, I realized that define-word &lt;a href=&#34;https://github.com/abo-abo/define-word/commit/6e4a427503aef096484f88332962c346cdd10847&#34;&gt;supports now offline Wiktionary&lt;/a&gt; ! It suffices to download &lt;a href=&#34;https://en.wiktionary.org/wiki/User:Matthias%5FBuchmeier/download&#34;&gt;offline Wiktionary&lt;/a&gt; in ding format to use this feature.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;And sync it in org-agenda by schedule it.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;It&amp;rsquo;s a matter of pressing &lt;code&gt;C-c d&lt;/code&gt; upon a word.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>[Firmin Martin]</dc:creator>
        
        
        
        
          
            
              <category>emacs</category>
            
          
            
              <category>dictionary</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>
